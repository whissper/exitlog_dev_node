{"version":3,"sources":["App/Utils/useAppReducer.js","App/Utils/fetchData.js","App/Utils/processException.js","App/TopHeader/index.js","App/LightCover/index.js","App/WorkPanels/LoginForm/index.js","App/Utils/useMainInspectorPanelReducer.js","App/WorkPanels/MainInspectorPanel/Components/MainMenu/index.js","App/WorkPanels/MainInspectorPanel/Components/InfoBox/index.js","App/WorkPanels/MainInspectorPanel/Components/TabNewRecord/Menu/index.js","App/WorkPanels/MainInspectorPanel/Components/TabNewRecord/NewRecordForm/ExitObject/index.js","App/WorkPanels/MainInspectorPanel/Components/TabNewRecord/NewRecordForm/index.js","App/Utils/processToArray.js","App/WorkPanels/MainInspectorPanel/Components/TabNewRecord/InsertNewRecordModal/index.js","App/WorkPanels/MainInspectorPanel/Components/TabNewRecord/index.js","App/Utils/formatDate.js","App/WorkPanels/MainInspectorPanel/Components/TabLog/Menu/index.js","App/WorkPanels/MainInspectorPanel/Components/TabLog/Paginator/index.js","App/WorkPanels/MainInspectorPanel/Components/TabLog/Search/SearchItem/index.js","App/WorkPanels/MainInspectorPanel/Components/TabLog/Search/index.js","App/WorkPanels/MainInspectorPanel/Components/TabLog/TableInfo/index.js","App/WorkPanels/MainInspectorPanel/Components/TabLog/TableField/TableRow/index.js","App/WorkPanels/MainInspectorPanel/Components/TabLog/TableField/index.js","App/WorkPanels/MainInspectorPanel/Components/TabLog/DeleteRecordModal/index.js","App/WorkPanels/MainInspectorPanel/Components/TabLog/UpdateRecordModal/index.js","App/WorkPanels/MainInspectorPanel/Components/TabLog/index.js","App/WorkPanels/MainInspectorPanel/Components/TabUsers/Menu/index.js","App/WorkPanels/MainInspectorPanel/Components/TabUsers/Search/index.js","App/WorkPanels/MainInspectorPanel/Components/TabUsers/TableInfo/index.js","App/WorkPanels/MainInspectorPanel/Components/TabUsers/TableField/TableRow/index.js","App/WorkPanels/MainInspectorPanel/Components/TabUsers/TableField/index.js","App/WorkPanels/MainInspectorPanel/Components/TabUsers/LockUserModal/index.js","App/WorkPanels/MainInspectorPanel/Components/TabUsers/UpdateUserModal/index.js","App/WorkPanels/MainInspectorPanel/Components/TabUsers/index.js","App/WorkPanels/MainInspectorPanel/index.js","App/WorkPanels/CreatePasswordForm/index.js","App/WorkPanels/LoginFormLockedUser/index.js","App/WorkPanels/InspectorPanel/Components/MainMenu/index.js","App/WorkPanels/InspectorPanel/Components/TabLog/Menu/index.js","App/WorkPanels/InspectorPanel/Components/TabLog/Search/index.js","App/WorkPanels/InspectorPanel/Components/TabLog/index.js","App/WorkPanels/InspectorPanel/index.js","App/Workspace/index.js","App/index.js","index.js"],"names":["AppDispatch","React","createContext","reducer","state","action","type","isLoad","panelData","window","alert","useAppReducer","initialState","useReducer","fetchData","serviceMethod","data","a","async","startLoad","stopLoad","response","url","fetch","method","credentials","headers","body","JSON","stringify","ok","text","status","statusText","processException","dataObject","errorOccured","message","methodName","representError","errorInfo","indexOf","split","TopHeader","props","Container","fluid","className","Row","Col","xs","icon","faReact","size","faNode","LightCover","isLoading","style","visibility","opacity","id","faSpinner","spin","LoginForm","appDispatch","useContext","loadingTriggers","useState","usr","pwd","grr","setCredentials","handleChange","e","name","target","value","prevCredentials","handleKeyPress","charCode","doLogin","loadWorkspace","userParams","parse","isvalid","userid","userrole","textResponse","panelDataJSON","lg","Form","Group","Label","Control","onChange","onKeyPress","Button","variant","block","onClick","MainInspectorPanelDispatch","infoBox","infoBoxData","panelTabs","paginators","pointsData","newRecordData","objects","addedObject","objectsAfterDel","filter","object","objectIndex","objectsAfterUpd","forEach","push","fields","insertNewRecordModal","insertNewRecordModalData","logData","logSearchFields","deleteRecordModal","deleteRecordModalData","updateRecordModal","updateRecordModalData","usersData","usersSearchFields","lockUserModal","lockUserModalData","updateUserModal","updateUserModalData","useMainInspectorPanelReducer","MainMenu","mainInspectorPanelDispatch","menuButtonIsClicked","menuButtonID","freshPanelTabs","item","ButtonGroup","active","showNewRecordTab","showLogTab","showUsersTab","location","depID","panelID","userID","userFIO","depName","InfoBox","show","iconType","faTimesCircle","faInfoCircle","faCheckCircle","Alert","dismissible","onClose","Menu","InputGroup","Prepend","Text","faUser","FormControl","disabled","faBuilding","ExitObject","objectNameInput","useRef","onObjectUpdate","onObjectDelete","objectName","objectNote","note","Syktyvkar","Ukhta","Sosnogorsk","Inta","faMapMarkerAlt","ref","token","count","placeholder","query","geolocation","specialRequestOptions","locationsBoost","getLocationsBoost","onSelect","suggestion","join","arr","separatorVal","separator","n","trim","postalindex","postal_code","region","region_type","area_type","area","town","city_type","city","settlement_type","settlement","street","street_type","building","house_type","house","block_type","apartment","flat_type","flat","geolat","qc_geo","geo_lat","geolon","geo_lon","oldformat","onBlur","Append","faMinus","as","NewRecordForm","timeExitInput","timeReturnInput","useEffect","dispatchChangeEvent","element","hoursNminutes","replace","parseInt","ev","Event","bubbles","dispatchEvent","timeExitElement","current","timeReturnElement","Inputmask","mask","greedy","oncomplete","onincomplete","remove","point_description","handleObjectUpdate","handleObjectDelete","Fragment","faPencilAlt","pointid","options","length","key","toString","getOptions","faClock","time_exit","time_return","faMapMarkedAlt","newIndex","indexes","map","Math","max","faPlus","formatNullValue","val","processToArray","InsertNewRecordModal","handleClose","point","find","Modal","onHide","Header","closeButton","Title","Body","Table","bordered","hover","OverlayTrigger","placement","overlay","Tooltip","Badge","faComment","Footer","newRecord","newRecordJSON","TabNewRecord","makeFixedFormat","formatDate","days","getDate","months","getMonth","fullYear","getFullYear","appDispath","sevenDaysAgo","Date","setDate","from","till","period","setPeriod","periodFromInput","periodTillInput","inputElements","inputElement","jQuery","on","off","datepicker","format","viewMode","minViewMode","language","periodFrom","periodTill","prevPeriod","faCalendarAlt","periodData","startDate","endDate","href","faFileExcel","Paginator","curPage","perPage","countRows","onItemClick","onPrevClick","onNextClick","onFirstClick","onLastClick","offset","floor","numberOfPages","ceil","itemClick","pageValue","attributes","pagenum","items","startItem","startItemValue","getStartItem","endItem","amoutOfItems","i","Pagination","Item","First","Prev","Next","Last","SearchItem","inputField","label","handleSearch","currentVal","params","delayTimer","clearTimeout","setTimeout","defaultValue","faTimes","Search","doSearch","searchParams","date","userFio","TableInfo","maxWidth","TableRow","day","pointDescription","timeExit","timeReturn","timeDuration","whiteSpace","index","minWidth","exitID","title","faPen","faTrashAlt","TableField","tableRows","rowItems","striped","DeleteRecordModal","UpdateRecordModal","exitFIO","setExitFIO","exitDate","setExitDate","setTimeExit","setTimeReturn","pointID","setPointID","setPointDescription","setObjects","jsonResponse","prevVal","fioExitUpd","dateExitUpd","timeexitExitUpd","timereturnExitUpd","pointExitUpd","pointDescriptionExitUpd","objectsExitUpd","selectExitByID","prevValue","objectVal","curObjects","faCalendarCheck","newObject","arrayOfObjects","jsonStringObjects","objectParams","timeexit","timereturn","TabLog","paginatorData","logSearchFieldsData","handleItemClick","pageNumber","tabLogPage","countrows","perpage","rowitems","userLocked","overlayText","textAlign","faIdCard","faLockOpen","faLock","LockUserModal","titleVal","textVal","apiMethod","UpdateUserModal","userPassword","userCredentials","setUserCredentials","departmentnameUserUpd","fioUserUpd","selectUserByID","userCredentialsParams","fio","pass","firstlogin","TabUsers","usersSearchFieldsData","tabUsersPage","MainInspectorPanel","page","dispatch","selectPoints","selectExits","selectUsers","doSelect","selectData","processResult","points","userfio","objectname","Provider","activeTab","activeTabs","getActiveTab","CreatePasswordForm","pwdRepeat","buttonActive","updateUser","keepWorkspace","updatedUser","faUserCircle","readOnly","LoginFormLockedUser","InspectorPanel","Workspace","wsID","ID","getWorkPanel","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b32b19fc.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\r\n\r\nconst AppDispatch = React.createContext(null);\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'setIsLoad':\r\n            return {...state, isLoad: action.isLoad};\r\n        case 'setPanelData':\r\n            return {...state, panelData: action.panelData}\r\n        case 'alertInvalidCredentials':\r\n            window.alert('Wrong Login data');\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction useAppReducer(initialState) {\r\n    return useReducer(reducer, initialState);\r\n}\r\n\r\nexport default useAppReducer;\r\nexport { AppDispatch };\r\n","\r\nconst REST_SERVICE_URL = '/exitlog_dev/'; //'http://kom-es01-app25:8889/exitlog_dev/';\r\n\r\nasync function fetchData(serviceMethod, data, startLoad = () => {}, stopLoad = () => {}) {\r\n    let response = null;\r\n\r\n    const url = REST_SERVICE_URL + serviceMethod;\r\n\r\n    startLoad();\r\n\r\n    try {\r\n        response = await fetch(url, {\r\n            method: 'POST',\r\n            credentials: 'same-origin', //'include',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    } catch(error) {\r\n        stopLoad();\r\n        return 'ERROR_FETCH|' + error;\r\n    }\r\n\r\n    if (response.ok) {\r\n        const text = await response.text();\r\n        stopLoad();\r\n        return text;\r\n    } else {\r\n        stopLoad();\r\n        return 'ERROR_HTTP|' + response.status + ' -- ' + response.statusText;\r\n    }\r\n}\r\n\r\nexport default fetchData;\r\nexport { REST_SERVICE_URL };\r\n","/**\r\n * Process Error\r\n * @param {Object} dataObject\r\n * <dataObject.message> - special error message for identification of error type\r\n * <dataObject.methodName> - name of method where error has occurred\r\n * <dataObject.representError> - callback for representing error info\r\n * @returns {Boolean} Error either occurred (true) or didn't (false)\r\n */\r\nfunction processException(dataObject) {\r\n    let errorOccured = false;\r\n\r\n    let data = dataObject || {};\r\n    data.message = (typeof data.message === 'undefined') ? 'DEFAULT_MESSAGE' : data.message;\r\n    data.methodName = (typeof data.methodName === 'undefined') ? 'DEFAULT_METHOD' : data.methodName;\r\n    data.representError = (typeof data.representError === 'undefined') ?\r\n        function(errorInfo) { alert(errorInfo); } :\r\n        data.representError;\r\n    \r\n    if (data.message === 'ERROR_ACCESS_DENIED') {\r\n        errorOccured = true;\r\n        data.representError('access denied : method -- ' + data.methodName);\r\n    } else if (data.message.indexOf('ERROR_PDO') !== -1) {\r\n        errorOccured = true;\r\n        const errorInfo = data.message.split('|');\r\n        data.representError('PDO Error: (' + errorInfo[1] + ') : method -- ' + data.methodName);\r\n    } else if (data.message === 'CHANGE_IMPOSSIBLE') {\r\n        errorOccured = true;\r\n        data.representError('Изменение\\\\Удаление невозможно');\r\n    } else if (data.message === 'ERROR_POSTDATA_INCORRECT') {\r\n        errorOccured = true;\r\n        data.representError('postdata is incorrect : method -- ' + data.methodName);\r\n    } else if (data.message.indexOf('ERROR_FETCH') !== -1) {\r\n        errorOccured = true;\r\n        const errorInfo = data.message.split('|');\r\n        data.representError('can\\'t fetch data: ' + errorInfo[1]);\r\n    } else if (data.message.indexOf('ERROR_HTTP') !== -1) {\r\n        errorOccured = true;\r\n        const errorInfo = data.message.split('|');\r\n        data.representError('http error: ' + errorInfo[1]);\r\n    } else if (data.message.indexOf('ERROR_TIME') !== -1) {\r\n        errorOccured = true;\r\n        const errorInfo = data.message.split('|');\r\n        data.representError(errorInfo[1]);\r\n    } else if (data.message.indexOf('ERROR_WS') !== -1) {\r\n        errorOccured = true;\r\n        const errorInfo = data.message.split('|');\r\n        data.representError('Web service call error: ' + errorInfo[1]);\r\n    } else if (data.message.indexOf('ERROR_SOAP') !== -1) {\r\n        errorOccured = true;\r\n        const errorInfo = data.message.split('|');\r\n        data.representError('SOAP Web service call error: ' + errorInfo[1]);\r\n    } else if (data.message.indexOf('ERROR_JAVA') !== -1) {\r\n        errorOccured = true;\r\n        const errorInfo = data.message.split('|');\r\n        data.representError('Java runtime error: ' + errorInfo[1]);\r\n    }\r\n\r\n    return errorOccured;\r\n}\r\n\r\nexport default processException;\r\n","import React from 'react';\r\nimport './TopHeader.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faNode, faReact } from '@fortawesome/free-brands-svg-icons'\r\n\r\nfunction TopHeader(props) {\r\n\r\n    return (\r\n        <Container fluid className=\"sav2-top-header\">\r\n            <Row>\r\n                <Col className=\"justify-content-center align-self-center\">EXIT-LOG</Col>\r\n                <Col xs=\"auto\" className=\"justify-content-center align-self-center\"> v 0.8.1</Col>\r\n                <Col xs=\"auto\" className=\"justify-content-center align-self-center\">\r\n                    <FontAwesomeIcon icon={faReact} size=\"3x\" />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"justify-content-center align-self-center\">\r\n                    <FontAwesomeIcon icon={faNode} size=\"4x\" />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default TopHeader;","import React from 'react';\r\nimport './LightCover.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction LightCover(props) {\r\n\r\n    const { isLoading } = props;\r\n\r\n    const style = {\r\n        visibility: isLoading ? 'visible' : 'hidden',\r\n        opacity: isLoading ? '1' : '0'\r\n    };\r\n\r\n    return (\r\n        <div id=\"light_cover\" style={style}>\r\n            <div className=\"light_cover_info\">\r\n                <FontAwesomeIcon icon={faSpinner} size=\"5x\" spin />\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LightCover;\r\n","import React, { useState, useContext } from 'react';\r\nimport './LoginForm.css';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport { AppDispatch } from 'App/Utils/useAppReducer';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException';\r\n\r\n\r\nfunction LoginForm(props) {\r\n    const appDispatch = useContext(AppDispatch);\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: false }) }\r\n    ];\r\n\r\n    const [credentials, setCredentials] = useState({\r\n        id: 'isuservalid',\r\n        usr: '',\r\n        pwd: '',\r\n        grr: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setCredentials((prevCredentials) => (\r\n            {...prevCredentials, [name]: value}\r\n        ));\r\n    };\r\n\r\n    const handleKeyPress = async (e) => {\r\n        const charCode = e.charCode;\r\n        //'Enter' key is pressed\r\n        if (charCode === 13) {\r\n            const userParams = await doLogin();\r\n            loadWorkspace(userParams);\r\n        }\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        const userParams = await doLogin();\r\n        loadWorkspace(userParams);\r\n    };\r\n\r\n    async function loadWorkspace(userParams) {\r\n        if (userParams !== null) {\r\n            const data = JSON.parse(userParams);\r\n\r\n            if (data.isvalid) {\r\n                const textResponse = await fetchData(\r\n                    'load_workspace',\r\n                    { userid: data.userid, userrole: data.userrole },\r\n                    ...loadingTriggers\r\n                );\r\n\r\n                const response = {\r\n                    message: textResponse,\r\n                    methodName: 'LoginForm.loadWorkspace()'\r\n                };\r\n                \r\n                if (!processException(response)) {\r\n                    const panelDataJSON = JSON.parse(textResponse);\r\n                    \r\n                    appDispatch({\r\n                        type: 'setPanelData', \r\n                        panelData: panelDataJSON\r\n                    });\r\n                }\r\n            } else {\r\n                appDispatch({ type: 'alertInvalidCredentials' });\r\n            }\r\n        }\r\n    }\r\n    \r\n    async function doLogin() {\r\n        const textResponse = await fetchData(\r\n            'login',\r\n            credentials,\r\n            ...loadingTriggers\r\n        );\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'LoginForm.doLogin()'\r\n        };\r\n        \r\n        if (!processException(response)) {\r\n            return textResponse;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col lg={12}>\r\n                <Form.Group>\r\n                    <Form.Label>Login:</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"usr\" onChange={handleChange} onKeyPress={handleKeyPress} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"pwd\" onChange={handleChange} onKeyPress={handleKeyPress} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" block onClick={handleClick}>Вход</Button>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { useReducer } from 'react';\r\n\r\nconst MainInspectorPanelDispatch = React.createContext(null);\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'setInfoBox':\r\n            return { ...state, infoBox: action.infoBoxData };\r\n        case 'setPanelTabs':\r\n            return { ...state, panelTabs: action.panelTabs };\r\n        case 'setPaginators':\r\n            return {\r\n                ...state,\r\n                paginators: {\r\n                    ...state.paginators,\r\n                    ...action.paginators\r\n                }\r\n            };\r\n        //NewRecord\r\n        case 'setPointsData':\r\n            return { ...state, pointsData: action.pointsData };\r\n        case 'setNewRecordData':\r\n            return {\r\n                ...state,\r\n                newRecordData: {\r\n                    ...state.newRecordData,\r\n                    ...action.newRecordData\r\n                }\r\n            };\r\n        case 'addExitObject':\r\n            return {\r\n                ...state,\r\n                newRecordData: {\r\n                    ...state.newRecordData,\r\n                    objects: [...state.newRecordData.objects, action.addedObject]\r\n                } \r\n            }\r\n        case 'deleteExitObject':\r\n            const objectsAfterDel = state.newRecordData.objects.filter((object) => (\r\n                object.objectIndex !== action.objectIndex\r\n            ));\r\n\r\n            return {\r\n                ...state,\r\n                newRecordData: {\r\n                    ...state.newRecordData,\r\n                    objects: objectsAfterDel\r\n                }\r\n            };\r\n        case 'updateExitObject':\r\n            let objectsAfterUpd = [];\r\n\r\n            state.newRecordData.objects.forEach((object) => {\r\n                if (object.objectIndex !== action.object.objectIndex) {\r\n                    objectsAfterUpd.push(object);\r\n                } else {\r\n                    objectsAfterUpd.push({\r\n                        objectIndex: action.object.objectIndex,\r\n                        fields: { ...object.fields, ...action.object.fields }\r\n                    });\r\n                }\r\n            });\r\n            \r\n            return {\r\n                ...state,\r\n                newRecordData: {\r\n                    ...state.newRecordData,\r\n                    objects: objectsAfterUpd\r\n                }\r\n            };\r\n        case 'setInsertNewRecordModal':\r\n            return {\r\n                ...state,\r\n                insertNewRecordModal: {\r\n                    ...state.insertNewRecordModal,\r\n                    ...action.insertNewRecordModalData\r\n                }\r\n            };\r\n        //Log\r\n        case 'setLogData':\r\n            return { ...state, logData: action.logData};\r\n        case 'setLogSearchFields':\r\n            return {\r\n                ...state,\r\n                logSearchFields: {\r\n                    ...state.logSearchFields,\r\n                    ...action.logSearchFields\r\n                }\r\n            };\r\n        case 'setDeleteRecordModal':\r\n            return { ...state, \r\n                deleteRecordModal: {\r\n                    ...state.deleteRecordModal,\r\n                    ...action.deleteRecordModalData\r\n                }\r\n            };\r\n        case 'setUpdateRecordModal':\r\n            return { ...state,\r\n                updateRecordModal: {\r\n                    ...state.updateRecordModal,\r\n                    ...action.updateRecordModalData\r\n                }\r\n            };\r\n        //Users\r\n        case 'setUsersData':\r\n            return { ...state, usersData: action.usersData };\r\n        case 'setUsersSearchFields':\r\n            return {\r\n                ...state,\r\n                usersSearchFields: {\r\n                    ...state.usersSearchFields,\r\n                    ...action.usersSearchFields\r\n                }\r\n            };\r\n        case 'setLockUserModal':\r\n            return {\r\n                ...state,\r\n                lockUserModal: {\r\n                    ...state.lockUserModal,\r\n                    ...action.lockUserModalData\r\n                }\r\n            };\r\n        case 'setUpdateUserModal':\r\n            return { ...state,\r\n                updateUserModal: {\r\n                    ...state.updateUserModal,\r\n                    ...action.updateUserModalData\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction useMainInspectorPanelReducer(initialState) {\r\n    return useReducer(reducer, initialState);\r\n}\r\n\r\nexport default useMainInspectorPanelReducer;\r\nexport { MainInspectorPanelDispatch };","import React, { useContext } from 'react';\r\nimport './MainMenu.css';\r\nimport {AppDispatch} from 'App/Utils/useAppReducer';\r\nimport {MainInspectorPanelDispatch} from 'App/Utils/useMainInspectorPanelReducer';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException';\r\nimport { Row, Col, Button, ButtonGroup } from 'react-bootstrap';\r\n\r\n\r\nfunction MainMenu(props) {\r\n\r\n    const appDispatch = useContext(AppDispatch);\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: false }); }\r\n    ];\r\n\r\n    const { data, panelData } = props;\r\n\r\n    const logoutIsClicked = async () => {\r\n        const textResponse = await fetchData(\r\n            'logout',\r\n            { id: '0' },\r\n            ...loadingTriggers\r\n        );\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'MainInspectorPanel.MainMenu.logoutIsClicked()'\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            appDispatch({\r\n                type: 'setPanelData',\r\n                panelData: {\r\n                    panelID: '0',\r\n                    userID: '',\r\n                    userFIO: '',\r\n                    depID: '',\r\n                    depName: ''\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const menuButtonIsClicked = (e) => {\r\n        const menuButtonID = e.target.id;\r\n\r\n        let freshPanelTabs = {};\r\n\r\n        for (let item in data) {\r\n            if (item === menuButtonID) {\r\n                freshPanelTabs[item] = true;\r\n            } else {\r\n                freshPanelTabs[item] = false;\r\n            }\r\n        }\r\n        \r\n        mainInspectorPanelDispatch({\r\n            type: 'setPanelTabs',\r\n            panelTabs: freshPanelTabs\r\n        });\r\n    };\r\n\r\n    const goToDocXIsClicked = () => {\r\n        window.location = 'http://kom-es01-app25:8888/docx/';\r\n    };\r\n\r\n    const goToActsIsClicked = () => {\r\n        window.location = \"http://kom-es01-app25:8888/acts/\";\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col lg={12}>\r\n                <ButtonGroup className=\"flex-wrap\">\r\n                    <Button variant=\"outline-secondary\" active={data.showNewRecordTab} onClick={menuButtonIsClicked} id=\"showNewRecordTab\">Новая запись</Button>\r\n                    <Button variant=\"outline-secondary\" active={data.showLogTab} onClick={menuButtonIsClicked} id=\"showLogTab\">Журнал</Button>\r\n                    <Button variant=\"outline-secondary\" active={data.showUsersTab} onClick={menuButtonIsClicked} id=\"showUsersTab\">Пользователи</Button>\r\n                    <Button variant=\"outline-info\" onClick={goToDocXIsClicked} >Акт обследования</Button>\r\n                    {(panelData.depID === 2 || panelData.depID === 3) &&\r\n                        <Button variant=\"outline-info\" onClick={goToActsIsClicked} >Бланки Ухта</Button>\r\n                    }\r\n                    <Button variant=\"primary\" onClick={logoutIsClicked} >Выйти</Button>\r\n                </ButtonGroup>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React, { useContext } from 'react';\r\nimport './InfoBox.css';\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faInfoCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\n\r\n\r\nfunction InfoBox(props) {\r\n\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const { variant, text, show } = props.data;\r\n\r\n    const closeInfoBox = () => {\r\n        mainInspectorPanelDispatch({ type: 'setInfoBox', infoBoxData: {...props.data, show: false} });\r\n    };\r\n\r\n    let iconType = faTimesCircle;\r\n\r\n    switch (variant) {\r\n        case 'danger':\r\n            iconType = faTimesCircle;\r\n            break;\r\n        case 'info':\r\n            iconType = faInfoCircle;\r\n            break;\r\n        case 'success':\r\n            iconType = faCheckCircle;\r\n            break;\r\n        default:\r\n            iconType = faInfoCircle;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col lg={12}>\r\n                <Alert variant={variant} dismissible onClose={closeInfoBox} show={show} >\r\n                    <FontAwesomeIcon icon={iconType} size=\"lg\" />\r\n                    &nbsp;{text}\r\n                </Alert>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from 'react';\r\nimport './Menu.css';\r\nimport { Row, Col, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faBuilding } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nfunction Menu(props) {\r\n\r\n    const { data } = props;\r\n\r\n    return (\r\n        <Row>\r\n            <Col lg={12}>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faUser} size=\"1x\" />\r\n                                    &nbsp;&nbsp;Сотрудник&nbsp;:\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl disabled value={data.userFIO} />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faBuilding} size=\"1x\" />\r\n                                    &nbsp;&nbsp;Подразделение&nbsp;:\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl disabled value={data.depName} />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import React, { useRef } from 'react';\r\nimport './ExitObject.css';\r\nimport { Col, Form, InputGroup, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMinus, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport DadataSuggestions from 'react-dadata-suggestions';\r\nimport \"react-dadata-suggestions/dist/styles.css\";\r\n\r\n\r\nfunction ExitObject(props) {\r\n\r\n    const objectNameInput = useRef(null);\r\n\r\n    const {\r\n        panelData,\r\n        objectIndex,\r\n        data,\r\n        onObjectUpdate,\r\n        onObjectDelete\r\n    } = props;\r\n\r\n    const handleNoteChange = (e) => {\r\n        const value = e.target.value;\r\n\r\n        const object = {\r\n            objectIndex: objectIndex,\r\n            fields: {\r\n                note: value\r\n            }\r\n        };\r\n\r\n        onObjectUpdate(object);\r\n    };\r\n\r\n    const handleObjectBlur = (e) => {\r\n        const value = e.target.value;\r\n\r\n        const object = {\r\n            objectIndex: objectIndex,\r\n            fields: {\r\n                name: value\r\n            }\r\n        };\r\n\r\n        onObjectUpdate(object);\r\n    };\r\n\r\n    const handleChange = (query) => {\r\n        const object = {\r\n            objectIndex: objectIndex,\r\n            fields: {\r\n                name: query\r\n            }\r\n        };\r\n\r\n        onObjectUpdate(object);\r\n    };\r\n\r\n    const handleObjectChange = (suggestion) => {\r\n        //join strings with separators\r\n        const join = (arr, separatorVal) => {\r\n            const separator = (separatorVal ? separatorVal : ', ');\r\n            return arr.filter((n) => (n)).join(separator);\r\n        };\r\n\r\n        const name = suggestion.value.trim();\r\n        const postalindex = suggestion.data.postal_code;\r\n        const region = join([\r\n            join([suggestion.data.region_type, suggestion.data.region], ' '),\r\n            join([suggestion.data.area_type, suggestion.data.area], ' ')\r\n        ]);\r\n        const town = join([\r\n            join([suggestion.data.city_type, suggestion.data.city], ' '),\r\n            join([suggestion.data.settlement_type, suggestion.data.settlement], ' ')\r\n        ]);\r\n        const street = join([suggestion.data.street_type, suggestion.data.street], ' ');\r\n        const building = join([\r\n            join([suggestion.data.house_type, suggestion.data.house], ' '),\r\n            join([suggestion.data.block_type, suggestion.data.block], ' ')\r\n        ]);\r\n        const apartment = join([suggestion.data.flat_type, suggestion.data.flat], ' ');\r\n        const geolat = (suggestion.data.qc_geo !== '5' ? suggestion.data.geo_lat : '');\r\n        const geolon = (suggestion.data.qc_geo !== '5' ? suggestion.data.geo_lon : '');\r\n\r\n        const oldformat = ((street.trim() === '' || building.trim() === '') ? '1' : '0');\r\n\r\n        const object = {\r\n            objectIndex: objectIndex,\r\n            fields: {\r\n                name: name,\r\n                postalindex: postalindex,\r\n                region: region,\r\n                town: town,\r\n                street: street,\r\n                building: building,\r\n                apartment: apartment,\r\n                geolat: geolat,\r\n                geolon: geolon,\r\n                oldformat: oldformat\r\n            }\r\n        };\r\n\r\n        onObjectUpdate(object);\r\n    };\r\n\r\n    const handleDel = () => {\r\n        onObjectDelete(objectIndex);\r\n    };\r\n\r\n    let objectName = '';\r\n    let objectNote = '';\r\n\r\n    data.forEach((object) => {\r\n        if (object.objectIndex === objectIndex) {\r\n            objectName = object.fields.name;\r\n            objectNote = object.fields.note;\r\n        }\r\n    });\r\n\r\n\r\n    const Syktyvkar     = { \"kladr_id\": \"1100000100000\" };\r\n    const Ukhta         = { \"kladr_id\": \"1100000800000\" };\r\n    const Sosnogorsk    = { \"kladr_id\": \"1100000600000\" };\r\n    const Inta          = { \"kladr_id\": \"1100000400000\" };\r\n\r\n    const getLocationsBoost = () => {\r\n        let locationsBoost = { \"locations_boost\": [Syktyvkar] };\r\n\r\n        if (panelData.depID === 2) {\r\n            locationsBoost = { \"locations_boost\": [Ukhta] };\r\n        } else if (panelData.depID === 3) {\r\n            locationsBoost = { \"locations_boost\": [Sosnogorsk] };\r\n        } else if (panelData.depID === 4) {\r\n            locationsBoost = { \"locations_boost\": [Inta] };\r\n        }\r\n\r\n        return locationsBoost;\r\n    };\r\n\r\n    return (\r\n        <Col lg={12}>\r\n            <Form.Group>\r\n                <Form.Label>\r\n                    <FontAwesomeIcon icon={faMapMarkerAlt} size=\"1x\" />\r\n                    &nbsp;Объект выхода :\r\n                </Form.Label>\r\n                <InputGroup>\r\n                    <DadataSuggestions name=\"objectName\" ref={objectNameInput}\r\n                        token=\"aa87679e3bfbbdaca05a44aa93ad6af10d54045a\" count={7} placeholder=\"Адрес\"\r\n                        query={objectName} geolocation={false} specialRequestOptions={getLocationsBoost()}\r\n                        onSelect={handleObjectChange} onBlur={handleObjectBlur} onChange={handleChange} />\r\n                    <InputGroup.Append>\r\n                        <Button variant=\"outline-secondary\" onClick={handleDel}>\r\n                            <FontAwesomeIcon icon={faMinus} />\r\n                        </Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n            </Form.Group>\r\n            <Form.Control as=\"input\" type=\"text\" placeholder=\"Примечание\" className=\"mb-3\"\r\n                name=\"objectNote\" value={objectNote} onChange={handleNoteChange} />\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ExitObject;\r\n","import React, { useContext, useEffect, useRef } from 'react';\r\nimport './NewRecordForm.css';\r\nimport { Row, Col, Form, InputGroup, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faMapMarkedAlt, faClock, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport ExitObject from './ExitObject';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\nimport Inputmask from 'inputmask';\r\n\r\n\r\nfunction NewRecordForm(props) {\r\n\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const { panelData, pointsData, data } = props;\r\n\r\n    const timeExitInput = useRef(null);\r\n    const timeReturnInput = useRef(null);\r\n\r\n    //Input-Mask -- start --\r\n    useEffect(() => {\r\n        //autocomplete + dispatch event\r\n        const dispatchChangeEvent = (element) => {\r\n            let elementVal = element.value.replace(/_/g, '0');\r\n            let hoursNminutes = elementVal.split(':');\r\n            if (parseInt(hoursNminutes[0])>18) {\r\n                hoursNminutes[0]='18';\r\n            }\r\n            if (parseInt(hoursNminutes[0])<9) {\r\n                hoursNminutes[0]='09';\r\n            }\r\n            if (parseInt(hoursNminutes[1])>59) {\r\n                hoursNminutes[1]='59';\r\n            }\r\n            element.value = hoursNminutes[0]+':'+hoursNminutes[1];\r\n            const ev = new Event('change', { bubbles: true });\r\n            element.dispatchEvent(ev);\r\n        };\r\n\r\n        const timeExitElement = timeExitInput.current;\r\n        const timeReturnElement = timeReturnInput.current;\r\n\r\n        //time_exit\r\n        Inputmask({\r\n            mask: \"99:99\", \r\n            greedy: false,\r\n            oncomplete: () => {\r\n                dispatchChangeEvent(timeExitElement);\r\n            },\r\n            onincomplete: () => {\r\n                dispatchChangeEvent(timeExitElement);\r\n            }\r\n        }).mask(timeExitElement);\r\n\r\n        //time_return\r\n        Inputmask({\r\n            mask: \"99:99\", \r\n            greedy: false,\r\n            oncomplete: () => {\r\n                dispatchChangeEvent(timeReturnElement);\r\n            },\r\n            onincomplete: () => {\r\n                dispatchChangeEvent(timeReturnElement);\r\n            }\r\n        }).mask(timeReturnElement);\r\n\r\n        return () => {\r\n            Inputmask.remove(timeExitElement);\r\n            Inputmask.remove(timeReturnElement);\r\n        };\r\n    }, []);\r\n\r\n    const getOptions = () => {\r\n        let options = [];\r\n\r\n        if (pointsData.length !== 0) {\r\n            pointsData.forEach(item => {\r\n                options.push(<option key={item.id.toString()} value={item.id.toString()}>{item.name}</option>);\r\n            });\r\n        }\r\n\r\n        options.push(<option key=\"5\" value=\"5\">Другое:</option>);\r\n\r\n        return options;\r\n    };\r\n\r\n    const handleChange = async (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        await mainInspectorPanelDispatch({\r\n            type: 'setNewRecordData',\r\n            newRecordData: { [name]: value }\r\n        });\r\n\r\n        if (name === 'pointid' && value !== '5') {\r\n            mainInspectorPanelDispatch({\r\n                type: 'setNewRecordData',\r\n                newRecordData: { point_description: '' }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleAddObject = () => {\r\n        let newIndex = 1;\r\n\r\n        if (data.objects.length !== 0) {\r\n            const indexes = data.objects.map((object) => (object.objectIndex));\r\n            newIndex = Math.max(...indexes) + 1;         \r\n        }\r\n\r\n        const newObject = { \r\n            objectIndex: newIndex,\r\n            fields: {\r\n                name        : '',\r\n                note        : '',\r\n                postalindex : '',\r\n                region      : '',\r\n                town        : '',\r\n                street      : '',\r\n                building    : '',\r\n                apartment   : '',\r\n                geolat      : '',\r\n                geolon      : '',\r\n                oldformat   : '1'\r\n            }\r\n        };\r\n\r\n        mainInspectorPanelDispatch({\r\n            type: 'addExitObject',\r\n            addedObject: newObject\r\n        });\r\n    };\r\n\r\n    const handleAddRecord = () => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setInsertNewRecordModal',\r\n            insertNewRecordModalData: { show: true }\r\n        });\r\n    };\r\n\r\n    const handleObjectUpdate = (object) => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'updateExitObject',\r\n            object: object\r\n        });\r\n    };\r\n\r\n    const handleObjectDelete = (objectIndex) => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'deleteExitObject',\r\n            objectIndex: objectIndex\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <Form.Group>\r\n                        <Form.Label>\r\n                            <FontAwesomeIcon icon={faPencilAlt} size=\"1x\" />\r\n                            &nbsp;Цель выхода :\r\n                        </Form.Label>\r\n                        <Form.Control as=\"select\" name=\"pointid\"\r\n                            value={data.pointid} onChange={handleChange}>\r\n                            {getOptions()}\r\n                        </Form.Control>\r\n                        <br />\r\n                        {\r\n                            data.pointid === '5' &&\r\n                            <Form.Control as=\"input\" type=\"text\" name=\"point_description\"\r\n                                value={data.point_description} onChange={handleChange} />\r\n                        }\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <Form.Group>\r\n                        <Form.Label>\r\n                            <FontAwesomeIcon icon={faClock} size=\"1x\" />\r\n                            &nbsp;Время :\r\n                        </Form.Label>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>с&nbsp;:</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control as=\"input\" type=\"text\" name=\"time_exit\"\r\n                                value={data.time_exit} onChange={handleChange} ref={timeExitInput}\r\n                                placeholder=\"00:00\" />\r\n                            <div className=\"input-group-prepend input-group-append\">\r\n                                <InputGroup.Text>до&nbsp;:</InputGroup.Text>\r\n                            </div>\r\n                            <Form.Control as=\"input\" type=\"text\" name=\"time_return\"\r\n                                value={data.time_return} onChange={handleChange} ref={timeReturnInput}\r\n                                placeholder=\"00:00\" />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col lg={12}>\r\n                    <hr />\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faMapMarkedAlt} size=\"1x\" />\r\n                                </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control as=\"input\" type=\"text\" disabled value=\"Объекты :\" />\r\n                        <InputGroup.Append>\r\n                            <Button variant=\"outline-secondary\" onClick={handleAddObject}>\r\n                                <FontAwesomeIcon icon={faPlus} />\r\n                            </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col lg={12}>\r\n                    <br />\r\n                </Col>\r\n\r\n                {\r\n                    data.objects.map((object) => ( \r\n                        <ExitObject key={object.objectIndex.toString()} \r\n                            panelData={panelData}\r\n                            objectIndex={object.objectIndex} \r\n                            data={data.objects}\r\n                            onObjectUpdate={handleObjectUpdate}\r\n                            onObjectDelete={handleObjectDelete} /> \r\n                    ))\r\n                }\r\n\r\n                <Col lg={12}>\r\n                    <hr />\r\n                </Col>\r\n                <Col lg={12}>\r\n                    <Button variant=\"primary\" size=\"lg\" onClick={handleAddRecord}>Записаться</Button>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default NewRecordForm;\r\n","function formatNullValue(val) {\r\n    if (val === null) {\r\n        return '';\r\n    } else {\r\n        return val;\r\n    }\r\n}; \r\n\r\nfunction processToArray(object) {\r\n    return [\r\n        formatNullValue(object.name),\r\n        formatNullValue(object.note),\r\n        formatNullValue(object.postalindex),\r\n        formatNullValue(object.region),\r\n        formatNullValue(object.town),\r\n        formatNullValue(object.street),\r\n        formatNullValue(object.building),\r\n        formatNullValue(object.apartment),\r\n        formatNullValue(object.geolat),\r\n        formatNullValue(object.geolon),\r\n        formatNullValue(object.oldformat) \r\n    ];\r\n};\r\n\r\nexport default processToArray;\r\n","import React, { useContext } from 'react';\r\nimport './InsertNewRecordModal.css';\r\nimport { \r\n    Modal, \r\n    Button, \r\n    Table, \r\n    Badge, \r\n    OverlayTrigger, \r\n    Tooltip \r\n} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer'\r\nimport { AppDispatch } from 'App/Utils/useAppReducer';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException';\r\nimport processToArray from 'App/Utils/processToArray';\r\n\r\nfunction InsertNewRecordModal(props) {\r\n\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n    const appDispatch = useContext(AppDispatch);\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: false }); }\r\n    ];\r\n\r\n    const {\r\n        data,\r\n        newRecordData,\r\n        panelData,\r\n        pointsData\r\n    } = props;\r\n\r\n    const handleClose = () => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setInsertNewRecordModal',\r\n            insertNewRecordModalData: { show: false }\r\n        });\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n        const newRecord = {\r\n            userid              : newRecordData.userid.toString(),\r\n            pointid             : newRecordData.pointid,\r\n            point_description   : newRecordData.point_description,\r\n            time_exit           : newRecordData.time_exit,\r\n            time_return         : newRecordData.time_return,\r\n            objects             : newRecordData.objects.map(\r\n                                    (object) => (processToArray(object.fields))\r\n                                  )\r\n        };\r\n\r\n        const textResponse = await fetchData(\r\n            'insert_newrecord',\r\n            { newRecordJSON: JSON.stringify(newRecord) },\r\n            ...loadingTriggers\r\n        );\r\n\r\n        await mainInspectorPanelDispatch({\r\n            type: 'setNewRecordData',\r\n            newRecordData: {\r\n                pointid: '1',\r\n                point_description: '',\r\n                time_exit: '',\r\n                time_return: '',\r\n                objects: []\r\n            }\r\n        });\r\n\r\n        mainInspectorPanelDispatch({\r\n            type: 'setInsertNewRecordModal',\r\n            insertNewRecordModalData: { show: false }\r\n        });\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'InsertNewRecordModal.handleAdd()',\r\n            representError: (errorInfo) => {\r\n                mainInspectorPanelDispatch({\r\n                    type: 'setInfoBox',\r\n                    infoBoxData: { variant: 'danger', text: errorInfo, show: true }\r\n                });\r\n            }\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            mainInspectorPanelDispatch({\r\n                type: 'setInfoBox',\r\n                infoBoxData: { variant: 'success', text: textResponse, show: true }\r\n            });\r\n        }\r\n    };\r\n\r\n    const point = pointsData.find(\r\n        (point) => (point.id === parseInt(newRecordData.pointid))\r\n    );\r\n\r\n    return (\r\n        <Modal show={data.show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Добавление новой записи в журнал</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>Данные новой записи:</p>\r\n                <Table bordered hover>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Сотрудник:</td>\r\n                            <td>{panelData.userFIO}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Цель выхода:</td>\r\n                            <td>\r\n                                {point ? point.name.trim() : 'Другое: '} \r\n                                {newRecordData.point_description}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Время выхода:</td>\r\n                            <td>{newRecordData.time_exit}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Время возврата:</td>\r\n                            <td>{newRecordData.time_return}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Объекты:</td>\r\n                            <td>\r\n                                <ul>\r\n                                    {\r\n                                        newRecordData.objects.map(\r\n                                            (object) => (\r\n                                                <li key={object.objectIndex.toString()}>\r\n                                                    {object.fields.name.trim()}&nbsp;\r\n                                                    {\r\n                                                        object.fields.note.trim() !== '' &&   \r\n                                                        <OverlayTrigger\r\n                                                            placement=\"top\"\r\n                                                            overlay={\r\n                                                                <Tooltip id={object.objectIndex.toString()}>\r\n                                                                    {object.fields.note.trim()}\r\n                                                                </Tooltip>    \r\n                                                            }>\r\n                                                            <Badge variant=\"info\" className=\"note-label\">\r\n                                                                <FontAwesomeIcon icon={faComment} />\r\n                                                                &nbsp;{object.fields.note.trim()}\r\n                                                            </Badge>\r\n                                                        </OverlayTrigger>\r\n                                                    }\r\n                                                </li>      \r\n                                            )\r\n                                        )\r\n                                    }\r\n                                </ul>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleAdd}>Добавить</Button>\r\n                <Button variant=\"secondary\" onClick={handleClose}>Отмена</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default InsertNewRecordModal;\r\n","import React from 'react';\r\nimport './TabNewRecord.css';\r\nimport Menu from './Menu';\r\nimport NewRecordForm from './NewRecordForm';\r\nimport InsertNewRecordModal from './InsertNewRecordModal';\r\n\r\n\r\nfunction TabNewRecord(props) {\r\n\r\n    const {\r\n        panelData,\r\n        pointsData,\r\n        newRecordData,\r\n        insertNewRecordModalData\r\n    } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Menu data={panelData} />\r\n            <hr />\r\n            <NewRecordForm panelData={panelData}\r\n                pointsData={pointsData} \r\n                data={newRecordData} />\r\n            <br />\r\n            <br />\r\n            <InsertNewRecordModal data={insertNewRecordModalData}\r\n                newRecordData={newRecordData}\r\n                panelData={panelData}\r\n                pointsData={pointsData} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TabNewRecord;\r\n","function makeFixedFormat(val) {\r\n\r\n    const formattedStr = (val.toString().length === 1 ? '0'+val.toString() : val.toString());\r\n    \r\n    return formattedStr;\r\n}\r\n\r\nfunction formatDate(value) {\r\n    const days      = value.getDate();\r\n    const months    = value.getMonth() + 1;\r\n    const fullYear  = value.getFullYear();\r\n    \r\n    return makeFixedFormat(days) + '-' + makeFixedFormat(months) + '-' + fullYear;\r\n}\r\n\r\nexport default formatDate;","import React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport './Menu.css';\r\nimport { Row, Col, Form, InputGroup, Button, FormControl } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faBuilding, faCalendarAlt, faFileExcel } from '@fortawesome/free-solid-svg-icons';\r\nimport formatDate from 'App/Utils/formatDate';\r\nimport { AppDispatch } from 'App/Utils/useAppReducer';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException';\r\n\r\n\r\nfunction Menu(props) {\r\n    const appDispath = useContext(AppDispatch);\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispath({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispath({ type: 'setIsLoad', isLoad: false }); }\r\n    ];\r\n\r\n    const { data } = props;\r\n\r\n    let sevenDaysAgo = new Date();\r\n    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\r\n\r\n    const [period, setPeriod] = useState({\r\n        from: formatDate(sevenDaysAgo),\r\n        till: formatDate(new Date())\r\n    });\r\n\r\n    const periodFromInput = useRef(null);\r\n    const periodTillInput = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const inputElements = [\r\n            periodFromInput.current,\r\n            periodTillInput.current\r\n        ];\r\n\r\n        inputElements.forEach((inputElement) => {\r\n            window.jQuery(inputElement).on('change', handleChange);\r\n        });\r\n\r\n        return () => {\r\n            inputElements.forEach((inputElement) => {\r\n                window.jQuery(inputElement).off('change', handleChange);\r\n            });\r\n        };//eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const inputElements = [\r\n            periodFromInput.current,\r\n            periodTillInput.current\r\n        ];\r\n\r\n        inputElements.forEach((inputElement) => {\r\n            window.jQuery(inputElement).datepicker({\r\n                format: \"dd-mm-yyyy\",\r\n                viewMode: \"months\",\r\n                minViewMode: \"days\",\r\n                language: 'ru'\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            inputElements.forEach((inputElement) => {\r\n                window.jQuery(inputElement).datepicker('destroy');\r\n            });\r\n        };//eslint-disable-next-line\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        const periodFrom = (window.jQuery(periodFromInput.current).datepicker('getDate') || sevenDaysAgo);\r\n        const periodTill = (window.jQuery(periodTillInput.current).datepicker('getDate') || new Date());\r\n\r\n        if (periodFrom > periodTill) {\r\n            setPeriod((prevPeriod) => (\r\n                { from: value, till: value }\r\n            ));\r\n        } else {\r\n            setPeriod((prevPeriod) => (\r\n                { ...prevPeriod, [name]: value }\r\n            ));\r\n        }\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        const periodData = {\r\n            startDate: period.from,\r\n            endDate: period.till\r\n        };\r\n\r\n        const textResponse = await fetchData(\r\n            'exitsReportSOAP',\r\n            periodData,\r\n            ...loadingTriggers\r\n        );\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'TabLog.Menu.handleClick()',\r\n            representError: (errorInfo) => {\r\n                mainInspectorPanelDispatch({\r\n                    type: 'setInfoBox',\r\n                    infoBoxData: { variant: 'danger', text: errorInfo, show: true }\r\n                });\r\n            }\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            window.location = window.location.href + textResponse;\r\n\r\n            mainInspectorPanelDispatch({\r\n                type: 'setInfoBox',\r\n                infoBoxData: { variant: 'info', text: 'Данные успешно выгрузились', show: true }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col lg={12}>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faUser} size=\"1x\" />\r\n                                    &nbsp;&nbsp;Сотрудник&nbsp;:\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl disabled value={data.userFIO} />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faBuilding} size=\"1x\" />\r\n                                    &nbsp;&nbsp;Подразделение&nbsp;:\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl disabled value={data.depName} />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col lg={12}>\r\n                        <hr />\r\n                    </Col>\r\n                    <Col lg={12}>\r\n                        <p>Отчет по выходам :</p>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faCalendarAlt} size=\"1x\" />\r\n                                    &nbsp;&nbsp;Период\r\n                                </InputGroup.Text>\r\n                                <InputGroup.Text>от&nbsp;:</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control as=\"input\" name=\"from\" type=\"text\"\r\n                                ref={periodFromInput} value={period.from} onChange={handleChange} />\r\n                            <div className=\"input-group-prepend input-group-append\">\r\n                                <InputGroup.Text>до&nbsp;:</InputGroup.Text>\r\n                            </div>\r\n                            <Form.Control as=\"input\" name=\"till\" type=\"text\"\r\n                                ref={periodTillInput} value={period.till} onChange={handleChange} />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <Button variant=\"success\" onClick={handleClick}>\r\n                            Выгрузить в Excel&nbsp;&nbsp;\r\n                            <FontAwesomeIcon icon={faFileExcel} size=\"1x\" />\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport './Paginator.css';\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\nfunction Paginator(props) {\r\n    \r\n    const { \r\n        curPage, \r\n        perPage, \r\n        countRows,\r\n        onItemClick,\r\n        onPrevClick,\r\n        onNextClick,\r\n        onFirstClick,\r\n        onLastClick \r\n    } = props;\r\n\r\n    const amoutOfItems = 7;\r\n\r\n    const offset = Math.floor(7 / 2);\r\n\r\n    const numberOfPages = (Math.ceil(countRows / perPage) < 1) ? 1 : Math.ceil(countRows / perPage);\r\n    \r\n    const itemClick = (e) => {\r\n        const pageValue = e.target.attributes.pagenum.value\r\n        onItemClick(parseInt(pageValue));\r\n    };\r\n\r\n    const prevClick = () => {\r\n        const pageNumber = (curPage - 1 < 1) ? 1 : curPage - 1;\r\n        onPrevClick(pageNumber);\r\n    };\r\n\r\n    const nextClick = () => {\r\n        const pageNumber = ((curPage + 1) > numberOfPages) ? numberOfPages : curPage + 1;\r\n        onNextClick(pageNumber);\r\n    };\r\n    \r\n    const firstClick = () => {\r\n        onFirstClick(1);\r\n    };\r\n\r\n    const lastClick = () => {\r\n        onLastClick(numberOfPages);\r\n    };\r\n\r\n    let items = [];\r\n\r\n    const getStartItem = () => {\r\n        if (curPage - offset <= 1) {\r\n            return 1;\r\n        } else {\r\n            if (curPage + amoutOfItems - offset > numberOfPages) {\r\n            /**\r\n             * let \r\n             *  curPage = x,\r\n             *  offset = y,\r\n             *  numberOfPages = z\r\n             * \r\n             * previous items:                   constant previous items at the end:\r\n             * 5 6 7 (8) 9 10 11  ==> 8-3        5 6 7 (8) 9 10 11  ==> 8-3 = 8-3-(3-(11-8))\r\n             * 6 7 8 (9) 10 11    ==> 9-3   >>>  5 6 7 8 (9) 10 11  ==> 9-4 = 9-3-(3-(11-9))\r\n             * 7 8 9 (10) 11      ==> 10-3  >>>  5 6 7 8 9 (10) 11  ==> 10-5 = 10-3-(3-(11-10))\r\n             * 8 9 10 (11)        ==> 11-3       5 6 7 8 9 10 (11)  ==> 11-6 = 11-3-(3-(11-11))\r\n             * \r\n             * the first expression was:\r\n             * x - y - (y - (z - x))\r\n             * \r\n             * modified expression:\r\n             * x - y - y + (z - x)\r\n             * x - 2y + z - x\r\n             * -2y + z\r\n             * z - 2y\r\n             * \r\n             * i.e. numberOfPages - (2 * offset)\r\n             */\r\n                //return numberOfPages - (2 * offset);\r\n                const startItemValue = numberOfPages - (2 * offset);\r\n                return (startItemValue > 0 ? startItemValue : 1);\r\n            } else { \r\n                return curPage - offset;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getEndItem = () => {\r\n        if (curPage - offset <= 1) {\r\n            if (numberOfPages < amoutOfItems) {\r\n                return numberOfPages + 1;\r\n            } else {\r\n                return amoutOfItems + 1;\r\n            }\r\n        } else {\r\n            if (curPage + amoutOfItems - offset > numberOfPages) {\r\n                return numberOfPages + 1;\r\n            } else {\r\n                return curPage + amoutOfItems - offset;\r\n            }\r\n        }\r\n    };\r\n\r\n    const startItem = getStartItem();\r\n    const endItem = getEndItem();\r\n\r\n    for (let i = startItem; i < endItem; i++) {\r\n        items.push(\r\n            <Pagination.Item active={i === curPage}\r\n                key={i}\r\n                onClick={itemClick}\r\n                pagenum={i}>\r\n                {i}\r\n            </Pagination.Item>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Pagination>\r\n            <Pagination.First onClick={firstClick} disabled={curPage === 1} />\r\n            <Pagination.Prev onClick={prevClick} disabled={curPage === 1} />\r\n            {items}\r\n            <Pagination.Next onClick={nextClick} disabled={curPage === numberOfPages} />\r\n            <Pagination.Last onClick={lastClick} disabled={curPage === numberOfPages} />\r\n        </Pagination>\r\n    );\r\n}\r\n\r\nexport default Paginator;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport './SearchItem.css';\r\nimport { Col, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport Inputmask from 'inputmask';\r\n\r\nfunction SearchItem(props) {\r\n\r\n    const inputField = useRef(null);\r\n\r\n    const {\r\n        size,\r\n        label,\r\n        mask,\r\n        handleSearch,\r\n        name,\r\n        currentVal\r\n    } = props;\r\n\r\n    //Date-Picker -- start --\r\n    //EventListener settings\r\n    useEffect(() => {\r\n        if (mask && mask.type === 'datepicker') {\r\n            const inputElement = inputField.current;\r\n\r\n            window.jQuery(inputElement).on('change', handleChange);\r\n\r\n            return () => {\r\n                window.jQuery(inputElement).off('change', handleChange);\r\n            };\r\n        }//eslint-disable-next-line\r\n    }, []);\r\n    //Datepicker settings\r\n    useEffect(() => {\r\n        if (mask && mask.type === 'datepicker') {\r\n            const inputElement = inputField.current;\r\n\r\n            window.jQuery(inputElement).datepicker(mask.params);\r\n\r\n            return () => {\r\n                window.jQuery(inputElement).datepicker('destroy');\r\n            };\r\n        }//eslint-disable-next-line\r\n    }, []);\r\n    //Date-Picker -- end --\r\n\r\n    //Input-Mask -- start --\r\n    useEffect(() => {\r\n        if (mask && mask.type === 'inputmask') {\r\n            const inputElement = inputField.current;\r\n\r\n            Inputmask(mask.params).mask(inputElement);\r\n\r\n            return () => {\r\n                Inputmask.remove(inputElement);\r\n            };\r\n        }//eslint-disable-next-line\r\n    }, []);\r\n    //Input-Mask -- end --\r\n\r\n    //EventListener for default (without mask property) search-item\r\n    /* useEffect(() => {\r\n        if (!mask) {\r\n            const inputElement = inputField.current;\r\n            inputElement.addEventListener('change', handleChange);\r\n\r\n            return () => {\r\n                inputElement.removeEventListener('change', handleChange);\r\n            };\r\n        }\r\n    }, []); */\r\n\r\n    const searchLatency = 1000;\r\n    let delayTimer = null;\r\n\r\n    const handleChange = () => {\r\n        clearTimeout(delayTimer);\r\n\r\n        delayTimer = setTimeout(function() {\r\n            handleSearch({[name]: inputField.current.value.trim()});\r\n        }, searchLatency);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        const inputElement = inputField.current;\r\n        if (inputElement.value !== '') {\r\n            inputElement.value = '';\r\n            //const ev = new Event('change', { bubbles: true });\r\n            //inputElement.dispatchEvent(ev);\r\n            handleSearch({ [name]: inputElement.value });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Col lg={size} className=\"sav2-mt-1\">\r\n            <InputGroup>\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text>{label}</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl className=\"no-placeholder\" \r\n                    ref={inputField} \r\n                    onChange={handleChange}\r\n                    defaultValue={currentVal} />\r\n                <InputGroup.Append>\r\n                    <Button variant=\"secondary\" onClick={handleClick}>\r\n                        <FontAwesomeIcon icon={faTimes} size=\"1x\" />\r\n                    </Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default SearchItem;\r\n","import React, { useContext } from 'react';\r\nimport './Search.css';\r\nimport { Row } from 'react-bootstrap';\r\nimport SearchItem from './SearchItem';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\n\r\n\r\nfunction Search(props) {\r\n\r\n    const {data} = props;\r\n\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const doSearch = (searchParams) => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setLogSearchFields',\r\n            logSearchFields: searchParams\r\n        });\r\n    };\r\n\r\n    const datepickerData = {\r\n        type: \"datepicker\",\r\n        params: {\r\n            format: \"dd-mm-yyyy\",\r\n            viewMode: \"months\",\r\n            minViewMode: \"days\",\r\n            language: 'ru'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <p>Поиск записей: </p>\r\n            <Row>\r\n                <SearchItem name=\"date\"\r\n                    size={4}\r\n                    label=\"Дата выхода:\"\r\n                    handleSearch={doSearch}\r\n                    mask={datepickerData}\r\n                    currentVal={data.date} />\r\n                <SearchItem name=\"objectName\"\r\n                    size={6}\r\n                    label=\"Объект выхода:\"\r\n                    handleSearch={doSearch}\r\n                    currentVal={data.objectName} />\r\n                <SearchItem name=\"userFio\"\r\n                    size={6}\r\n                    label=\"ФИО сотрудника:\"\r\n                    handleSearch={doSearch}\r\n                    currentVal={data.userFio} />\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport './TableInfo.css';\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\n\r\n\r\nfunction TableInfo(props) {\r\n   \r\n    const { countRows } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <p>Список записей:</p>\r\n            <InputGroup>\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text>Всего найдено записей:</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl disabled value={countRows} style={{maxWidth: '200px'}} />\r\n            </InputGroup>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TableInfo;","import React, { useContext } from 'react';\r\nimport './TableRow.css';\r\nimport {  \r\n    Button, \r\n    Badge, \r\n    OverlayTrigger, \r\n    Tooltip \r\n} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComment, faPen } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\n\r\n\r\nfunction TableRow(props) {\r\n\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const {\r\n       id,\r\n       day,\r\n       date,\r\n       userFio,\r\n       objects,\r\n       point,\r\n       pointDescription,\r\n       timeExit,\r\n       timeReturn,\r\n       timeDuration \r\n    } = props;\r\n\r\n    const handleUpdate = () => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setUpdateRecordModal',\r\n            updateRecordModalData: {\r\n                show: true,\r\n                exitID: id\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setDeleteRecordModal',\r\n            deleteRecordModalData: {\r\n                show: true,\r\n                exitID: id\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <tr>\r\n            <td>{day}</td>\r\n            <td>{date}</td>\r\n            <td style={{whiteSpace: 'nowrap'}}>{userFio}</td>\r\n            <td>\r\n                {\r\n                    objects.map((object, index) => (\r\n                        <div className=\"mb-2\" key={index.toString()}>\r\n                            {object[0]}&nbsp;\r\n                            {\r\n                                object[1] !== '' &&   \r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    overlay={\r\n                                        <Tooltip id={index.toString()}>\r\n                                            {object[1]}\r\n                                        </Tooltip>    \r\n                                    }>\r\n                                    <Badge variant=\"info\" className=\"note-label\">\r\n                                        <FontAwesomeIcon icon={faComment} />\r\n                                        &nbsp;{object[1]}\r\n                                    </Badge>\r\n                                </OverlayTrigger>\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n            </td>\r\n            <td>\r\n                {point + (pointDescription === '' ? '' : ' '+ pointDescription)}\r\n            </td>\r\n            <td>{timeExit}</td>\r\n            <td>{timeReturn}</td>\r\n            <td>{timeDuration}</td>\r\n            <td style={{minWidth: '120px'}}>\r\n                <Button variant=\"success\" className=\"sav2-opt-button\" onClick={handleUpdate} title=\"Изменить\">\r\n                    <FontAwesomeIcon icon={faPen} size=\"1x\" />\r\n                </Button>\r\n                <Button variant=\"danger\" className=\"sav2-opt-button\" onClick={handleDelete} title=\"Удалить\">\r\n                    <FontAwesomeIcon icon={faTrashAlt} size=\"1x\" />\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TableRow;","import React from 'react';\r\nimport './TableField.css';\r\nimport { Table } from 'react-bootstrap';\r\nimport TableRow from './TableRow';\r\n\r\n\r\nfunction TableField(props) {\r\n\r\n    const { rowItems } = props;\r\n\r\n    const tableRows = rowItems.map((item) => (\r\n        <TableRow key={(item[0]).toString()}\r\n            id={(item[0]).toString()}\r\n            day={item[1]}\r\n            date={item[2]}\r\n            userFio={item[3]}\r\n            objects={item[4]}\r\n            point={item[5]}\r\n            pointDescription={item[6]}\r\n            timeExit={item[7]}\r\n            timeReturn={item[8]}\r\n            timeDuration={item[9]} />\r\n    ));\r\n\r\n    return (\r\n        <Table striped>\r\n            <thead>\r\n                <tr>\r\n                    <th>День</th>\r\n                    <th>Дата</th>\r\n                    <th>Сотрудник</th>\r\n                    <th>Объекты</th>\r\n                    <th>Цель выхода</th>\r\n                    <th>С</th>\r\n                    <th>До</th>\r\n                    <th>Часы</th>\r\n                    <th>Действие</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {tableRows}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default TableField;","import React, { useContext } from 'react';\r\nimport './DeleteRecordModal.css';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\nimport { AppDispatch } from 'App/Utils/useAppReducer';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException';\r\n\r\n\r\nfunction DeleteRecordModal(props) {\r\n\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n    const appDispatch = useContext(AppDispatch);\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: false }); }\r\n    ];\r\n\r\n    const { data } = props;\r\n\r\n    const handleClose = () => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setDeleteRecordModal',\r\n            deleteRecordModalData: {\r\n                show: false\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        const textResponse = await fetchData(\r\n            'delete_exit',\r\n            { id: data.exitID },\r\n            ...loadingTriggers\r\n        );\r\n\r\n        mainInspectorPanelDispatch({\r\n            type: 'setDeleteRecordModal',\r\n            deleteRecordModalData: {\r\n                show: false\r\n            }\r\n        });\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'DeleteRecordModal.handleDelete()',\r\n            representError: (errorInfo) => {\r\n                mainInspectorPanelDispatch({\r\n                    type: 'setInfoBox',\r\n                    infoBoxData: { variant: 'danger', text: errorInfo, show: true }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!processException(response)) {\r\n            mainInspectorPanelDispatch({\r\n                type: 'setInfoBox',\r\n                infoBoxData: { variant: 'success', text: textResponse, show: true }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal show={data.show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Удаление записи</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>Удалить данную запись (и все связанные с ней объекты) под id: {data.exitID}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleDelete}>Удалить</Button>\r\n                <Button variant=\"secondary\" onClick={handleClose}>Отмена</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default DeleteRecordModal;","import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport './UpdateRecordModal.css';\r\nimport { \r\n    Modal, \r\n    Button,\r\n    Form, \r\n    InputGroup, \r\n    FormControl \r\n} from 'react-bootstrap';\r\nimport { AppDispatch } from 'App/Utils/useAppReducer';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faUser, \r\n    faClock, \r\n    faCalendarCheck, \r\n    faPencilAlt,\r\n    faMapMarkedAlt,\r\n    faPlus \r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport Inputmask from 'inputmask';\r\nimport ExitObject from 'App/WorkPanels/MainInspectorPanel/Components/TabNewRecord/NewRecordForm/ExitObject';\r\nimport processToArray from 'App/Utils/processToArray';\r\n\r\n\r\nfunction UpdateRecordModal(props) {\r\n\r\n    const appDispatch = useContext(AppDispatch);\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: false }) }\r\n    ];\r\n\r\n    const { \r\n        panelData,\r\n        data,\r\n        pointsData \r\n    } = props;\r\n\r\n    const timeExitInput = useRef(null);\r\n    const timeReturnInput = useRef(null);\r\n\r\n    const [exitFIO, setExitFIO] = useState('');\r\n    const [exitDate, setExitDate] = useState('');\r\n    const [timeExit, setTimeExit] = useState('');\r\n    const [timeReturn, setTimeReturn] = useState('');\r\n    const [pointID, setPointID] = useState('5');\r\n    const [pointDescription, setPointDescription] = useState('');\r\n    const [objects, setObjects] = useState([]);\r\n\r\n    //Input-Mask -- start --\r\n    useEffect(() => {\r\n        if (data.show) {\r\n            //autocomplete + dispatch event\r\n            const dispatchChangeEvent = (element) => {\r\n                let elementVal = element.value.replace(/_/g, '0');\r\n                let hoursNminutes = elementVal.split(':');\r\n                if (parseInt(hoursNminutes[0])>18) {\r\n                    hoursNminutes[0]='18';\r\n                }\r\n                if (parseInt(hoursNminutes[0])<9) {\r\n                    hoursNminutes[0]='09';\r\n                }\r\n                if (parseInt(hoursNminutes[1])>59) {\r\n                    hoursNminutes[1]='59';\r\n                }\r\n                element.value = hoursNminutes[0]+':'+hoursNminutes[1];\r\n                const ev = new Event('change', { bubbles: true });\r\n                element.dispatchEvent(ev);\r\n            };\r\n\r\n            const timeExitElement = timeExitInput.current;\r\n            const timeReturnElement = timeReturnInput.current;\r\n\r\n            //time_exit\r\n            Inputmask({\r\n                mask: \"99:99\", \r\n                greedy: false,\r\n                oncomplete: () => {\r\n                    dispatchChangeEvent(timeExitElement);\r\n                },\r\n                onincomplete: () => {\r\n                    dispatchChangeEvent(timeExitElement);\r\n                }\r\n            }).mask(timeExitElement);\r\n\r\n            //time_return\r\n            Inputmask({\r\n                mask: \"99:99\", \r\n                greedy: false,\r\n                oncomplete: () => {\r\n                    dispatchChangeEvent(timeReturnElement);\r\n                },\r\n                onincomplete: () => {\r\n                    dispatchChangeEvent(timeReturnElement);\r\n                }\r\n            }).mask(timeReturnElement);\r\n        \r\n            return () => {\r\n                Inputmask.remove(timeExitElement);\r\n                Inputmask.remove(timeReturnElement);\r\n            };\r\n        }\r\n    }, [data.show]);\r\n\r\n    const selectExitByID = async () => {\r\n        const textResponse = await fetchData(\r\n            'select_exit_by_id',\r\n            { id: data.exitID },\r\n            ...loadingTriggers\r\n        );\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'TabLog.UpdateRecordModal.selectExitByID()',\r\n            representError: (errorInfo) => {\r\n                mainInspectorPanelDispatch({\r\n                    type: 'setInfoBox',\r\n                    infoBoxData: { variant: 'danger', text: errorInfo, show: true }\r\n                });\r\n            }\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            const jsonResponse = JSON.parse(textResponse);            \r\n            const fields = jsonResponse.fields;\r\n\r\n            setExitFIO((prevVal) => (fields.fioExitUpd));\r\n            setExitDate((prevVal) => (fields.dateExitUpd));\r\n            setTimeExit((prevVal) => (fields.timeexitExitUpd));\r\n            setTimeReturn((prevVal) => (fields.timereturnExitUpd));\r\n            setPointID((prevVal) => (fields.pointExitUpd.toString()));\r\n            setPointDescription((prevVal) => (fields.pointDescriptionExitUpd));\r\n            setObjects((prevVal) => (\r\n                fields.objectsExitUpd.map((item, index) => (\r\n                    {\r\n                        objectIndex: index,\r\n                        fields: {\r\n                            name        : item[0],\r\n                            note        : item[1],\r\n                            postalindex : item[2],\r\n                            region      : item[3],\r\n                            town        : item[4],\r\n                            street      : item[5],\r\n                            building    : item[6],\r\n                            apartment   : item[7],\r\n                            geolat      : item[8],\r\n                            geolon      : item[9],\r\n                            oldformat   : item[10].toString()\r\n                        }\r\n                    }\r\n                ))\r\n            ));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (data.show) {\r\n            selectExitByID();\r\n            return () => {\r\n                setExitFIO((prevVal) => (''));\r\n                setExitDate((prevVal) => (''));\r\n                setTimeExit((prevVal) => (''));\r\n                setTimeReturn((prevVal) => (''));\r\n                setPointID((prevVal) => ('5'));\r\n                setPointDescription((prevVal) => (''));\r\n                setObjects((prevVal) => ([]));\r\n            };\r\n        }//eslint-disable-next-line\r\n    }, [data.show]);\r\n\r\n    const getOptions = () => {\r\n        let options = [];\r\n\r\n        if (pointsData.length !== 0) {\r\n            pointsData.forEach(item => {\r\n                options.push(<option key={item.id.toString()} value={item.id.toString()}>{item.name}</option>);\r\n            });\r\n        }\r\n\r\n        options.push(<option key=\"5\" value=\"5\">Другое:</option>);\r\n\r\n        return options;\r\n    };\r\n\r\n    const handleChange = async (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        if (name === 'time_exit') {\r\n            setTimeExit((prevValue) => (value));\r\n        } else if (name === 'time_return') {\r\n            setTimeReturn((prevValue) => (value));\r\n        }\r\n    };\r\n\r\n    const handleAddObject = () => {\r\n        let newIndex = 1;\r\n\r\n        if (objects.length !== 0) {\r\n            const indexes = objects.map((object) => (object.objectIndex));\r\n            newIndex = Math.max(...indexes) + 1;         \r\n        }\r\n\r\n        const newObject = { \r\n            objectIndex: newIndex,\r\n            fields: {\r\n                name        : '',\r\n                note        : '',\r\n                postalindex : '',\r\n                region      : '',\r\n                town        : '',\r\n                street      : '',\r\n                building    : '',\r\n                apartment   : '',\r\n                geolat      : '',\r\n                geolon      : '',\r\n                oldformat   : '1'\r\n            }\r\n        };\r\n\r\n        setObjects((curObjects) => (\r\n            [...curObjects, newObject]\r\n        ));\r\n    };\r\n\r\n    const handleClose = () => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setUpdateRecordModal',\r\n            updateRecordModalData: {\r\n                show: false\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleObjectUpdate = (objectVal) => {\r\n        let objectsAfterUpd = [];\r\n\r\n        objects.forEach((object) => {\r\n            if (object.objectIndex !== objectVal.objectIndex) {\r\n                objectsAfterUpd.push(object);\r\n            } else {\r\n                objectsAfterUpd.push({\r\n                    objectIndex: objectVal.objectIndex,\r\n                    fields: { ...object.fields, ...objectVal.fields }\r\n                });\r\n            }\r\n        });\r\n        \r\n        setObjects((curObjects) => (objectsAfterUpd));\r\n    };\r\n\r\n    const handleObjectDelete = (objectIndex) => {\r\n        const objectsAfterDel = objects.filter((object) => (\r\n            object.objectIndex !== objectIndex\r\n        ));\r\n\r\n        setObjects((curObjects) => (objectsAfterDel));\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        const arrayOfObjects = objects.map((object) => (processToArray(object.fields)));\r\n        const jsonStringObjects = JSON.stringify({ objects: arrayOfObjects });\r\n         \r\n        const objectParams = {\r\n            id: data.exitID,\r\n            objects: jsonStringObjects,\r\n            timeexit: timeExit,\r\n            timereturn: timeReturn\r\n        };\r\n\r\n        const textResponse = await fetchData(\r\n            'update_exit',\r\n            objectParams,\r\n            ...loadingTriggers\r\n        );\r\n        \r\n        mainInspectorPanelDispatch({\r\n            type: 'setUpdateRecordModal',\r\n            updateRecordModalData: {\r\n                show: false\r\n            }\r\n        });\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'TabLog.UpdateRecordModal.handleSave()',\r\n            representError: (errorInfo) => {\r\n                mainInspectorPanelDispatch({\r\n                    type: 'setInfoBox',\r\n                    infoBoxData: { variant: 'danger', text: errorInfo, show: true }\r\n                });\r\n            }\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            mainInspectorPanelDispatch({\r\n                type: 'setInfoBox',\r\n                infoBoxData: { variant: 'info', text: textResponse, show: true }\r\n            });\r\n        }\r\n    };\r\n\r\n    return(\r\n        <Modal show={data.show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Изменение данных записи по выходу</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faUser} size=\"1x\" />\r\n                                    &nbsp;&nbsp;Сотрудник&nbsp;:\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl disabled value={exitFIO} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>\r\n                            <FontAwesomeIcon icon={faCalendarCheck} size=\"1x\" />\r\n                            &nbsp;Дата выхода :\r\n                        </Form.Label>\r\n                        <Form.Control disabled value={exitDate} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>\r\n                            <FontAwesomeIcon icon={faClock} size=\"1x\" />\r\n                            &nbsp;Время :\r\n                        </Form.Label>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>с&nbsp;:</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control as=\"input\" type=\"text\" name=\"time_exit\"\r\n                                value={timeExit} onChange={handleChange} ref={timeExitInput}\r\n                                placeholder=\"00:00\" />\r\n                            <div className=\"input-group-prepend input-group-append\">\r\n                                <InputGroup.Text>до&nbsp;:</InputGroup.Text>\r\n                            </div>\r\n                            <Form.Control as=\"input\" type=\"text\" name=\"time_return\"\r\n                                value={timeReturn} onChange={handleChange} ref={timeReturnInput}\r\n                                placeholder=\"00:00\" />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>\r\n                            <FontAwesomeIcon icon={faPencilAlt} size=\"1x\" />\r\n                            &nbsp;Цель выхода :\r\n                        </Form.Label>\r\n                        <Form.Control as=\"select\" name=\"pointid\"\r\n                            value={pointID} disabled>\r\n                            {getOptions()}\r\n                        </Form.Control>\r\n                        <br />\r\n                        {\r\n                            pointID === '5' &&\r\n                            <Form.Control as=\"input\" type=\"text\" name=\"point_description\"\r\n                                value={pointDescription} disabled />\r\n                        }\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                    <InputGroup.Text>\r\n                                        <FontAwesomeIcon icon={faMapMarkedAlt} size=\"1x\" />\r\n                                    </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control as=\"input\" type=\"text\" disabled value=\"Объекты :\" />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"outline-secondary\" onClick={handleAddObject}>\r\n                                    <FontAwesomeIcon icon={faPlus} />\r\n                                </Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    {\r\n                        objects.map((object) => ( \r\n                            <ExitObject key={object.objectIndex.toString()}\r\n                                panelData={panelData} \r\n                                objectIndex={object.objectIndex} \r\n                                data={objects}\r\n                                onObjectUpdate={handleObjectUpdate}\r\n                                onObjectDelete={handleObjectDelete} /> \r\n                        ))\r\n                    }\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleSave}>Сохранить</Button>\r\n                <Button variant=\"secondary\" onClick={handleClose}>Отмена</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default UpdateRecordModal;\r\n","import React, { useContext } from 'react';\r\nimport './TabLog.css';\r\nimport Menu from './Menu';\r\nimport Paginator from './Paginator';\r\nimport Search from './Search';\r\nimport TableInfo from './TableInfo';\r\nimport TableField from './TableField';\r\nimport DeleteRecordModal from './DeleteRecordModal';\r\nimport UpdateRecordModal from './UpdateRecordModal';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\n\r\n\r\nfunction TabLog(props) {\r\n\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const {\r\n        panelData,\r\n        pointsData,\r\n        paginatorData,\r\n        logData,\r\n        logSearchFieldsData,\r\n        deleteRecordModalData,\r\n        updateRecordModalData\r\n    } = props;\r\n\r\n    const handleItemClick = (pageNumber) => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setPaginators',\r\n            paginators: { tabLogPage: pageNumber }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Menu data={panelData} />\r\n            <hr />\r\n            <Search data={logSearchFieldsData} />\r\n            <hr />\r\n            <TableInfo countRows={logData.countrows} />\r\n            <hr />\r\n            <Paginator curPage={paginatorData}\r\n                perPage={logData.perpage}\r\n                countRows={logData.countrows}\r\n                onItemClick={handleItemClick}\r\n                onPrevClick={handleItemClick}\r\n                onNextClick={handleItemClick}\r\n                onFirstClick={handleItemClick}\r\n                onLastClick={handleItemClick} />\r\n            <TableField rowItems={logData.rowitems} />\r\n            <hr />\r\n            <Paginator curPage={paginatorData}\r\n                perPage={logData.perpage}\r\n                countRows={logData.countrows}\r\n                onItemClick={handleItemClick}\r\n                onPrevClick={handleItemClick}\r\n                onNextClick={handleItemClick}\r\n                onFirstClick={handleItemClick}\r\n                onLastClick={handleItemClick} />\r\n            <br />\r\n            <br />\r\n            <DeleteRecordModal data={deleteRecordModalData} />\r\n            <UpdateRecordModal panelData={panelData}\r\n                data={updateRecordModalData} \r\n                pointsData={pointsData}/>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TabLog;\r\n","import React from 'react';\r\nimport './Menu.css';\r\nimport { Row, Col, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faBuilding } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nfunction Menu(props) {\r\n\r\n    const { data } = props;\r\n\r\n    return(\r\n        <Row>\r\n            <Col lg={12}>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faUser} size=\"1x\" />\r\n                                    &nbsp;&nbsp;Сотрудник&nbsp;:\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl disabled value={data.userFIO} />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faBuilding} size=\"1x\" />\r\n                                    &nbsp;&nbsp;Подразделение&nbsp;:\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl disabled value={data.depName} />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React, { useContext } from 'react';\r\nimport './Search.css';\r\nimport { Row } from 'react-bootstrap';\r\nimport SearchItem from 'App/WorkPanels/MainInspectorPanel/Components/TabLog/Search/SearchItem';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\n\r\n\r\nfunction Search(props) {\r\n\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const { data } = props;\r\n\r\n    const doSearch = (searchParams) => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setUsersSearchFields',\r\n            usersSearchFields: searchParams\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <p>Поиск пользователей: </p>\r\n            <Row>\r\n                <SearchItem name=\"userFio\"\r\n                    size={6}\r\n                    label=\"ФИО пользователя:\"\r\n                    handleSearch={doSearch}\r\n                    currentVal={data.userFio} />\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './TableInfo.css';\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nfunction TableInfo(props) {\r\n\r\n    const { countRows } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <p>Список записей:</p>\r\n            <InputGroup>\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text>Всего найдено записей:</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl disabled value={countRows} style={{maxWidth: '200px'}} />\r\n            </InputGroup>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TableInfo;\r\n","import React, { useContext } from 'react';\r\nimport './TableRow.css';\r\nimport { OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faIdCard, faLock, faLockOpen } from '@fortawesome/free-solid-svg-icons';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\n\r\n\r\nfunction TableRow(props) {\r\n\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const {\r\n        userID,\r\n        userLocked,\r\n        userFio\r\n    } = props; \r\n\r\n    const handleUpdate = async () => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setUpdateUserModal',\r\n            updateUserModalData: {\r\n                show: true,\r\n                userID: userID\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleLockUnlock = () => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setLockUserModal',\r\n            lockUserModalData: { \r\n                show: true,\r\n                userID: userID,\r\n                userFio: userFio,\r\n                userLocked: userLocked\r\n            }\r\n        });\r\n    };\r\n\r\n    const overlayText = (userLocked === 0 ? \r\n        'Разблокирован. Нажмите чтобы заблокировать' : \r\n        'Заблокирован. Нажмите чтобы разблокировать'\r\n    );\r\n\r\n    return (\r\n        <tr>\r\n            <td>{userFio}</td>\r\n            <td style={{textAlign: \"right\"}}>\r\n                <Button variant=\"success\" \r\n                    className=\"sav2-opt-button\" \r\n                    title=\"Изменить данные учетной записи\" \r\n                    onClick={handleUpdate}>\r\n                        <FontAwesomeIcon icon={faIdCard} size=\"1x\" />\r\n                </Button>\r\n                <OverlayTrigger\r\n                    placement=\"top\"\r\n                    overlay={<Tooltip id={userID}>{overlayText}</Tooltip>}>\r\n                        <Button variant={(userLocked === 0 ? \"info\" : \"warning\")} \r\n                            className=\"sav2-opt-button\"  \r\n                            onClick={handleLockUnlock}>\r\n                                <FontAwesomeIcon icon={(userLocked === 0 ? faLockOpen : faLock)} size=\"1x\" />\r\n                        </Button>\r\n                </OverlayTrigger>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport './TableField.css';\r\nimport { Table } from 'react-bootstrap';\r\nimport TableRow from './TableRow';\r\n\r\n\r\nfunction TableField(props) {\r\n\r\n    const { rowItems } = props;\r\n\r\n    const tableRows = rowItems.map((item) => (\r\n        <TableRow key={(item[0]).toString()}\r\n            userID={(item[0]).toString()}\r\n            userLocked={item[1]}\r\n            userFio={item[2]} />\r\n    ));\r\n\r\n    return (\r\n        <Table striped>\r\n            <thead>\r\n                <tr>\r\n                    <th>ФИО сотрудника</th>\r\n                    <th style={{textAlign: \"right\"}}>Действие</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {tableRows}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default TableField;\r\n","import React, { useContext } from 'react';\r\nimport './LockUserModal.css';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException';\r\nimport { AppDispatch } from 'App/Utils/useAppReducer';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\n\r\n\r\nfunction LockUserModal(props) {\r\n\r\n    const appDispatch = useContext(AppDispatch);\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const { data } = props;\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: false }); }\r\n    ];\r\n\r\n    const handleClose = () => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setLockUserModal',\r\n            lockUserModalData: { show: false }\r\n        });\r\n    };\r\n\r\n    const handleLockUnlock = async () => {\r\n        const apiMethod = (data.userLocked === 0 ? 'lock_user' : 'unlock_user');\r\n\r\n        const textResponse = await fetchData(\r\n            apiMethod,\r\n            { id: data.userID },\r\n            ...loadingTriggers\r\n        );\r\n\r\n        mainInspectorPanelDispatch({\r\n            type: 'setLockUserModal',\r\n            lockUserModalData: { show: false }\r\n        });\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'LockUserModal.handleLock()',\r\n            representError: (errorInfo) => {\r\n                mainInspectorPanelDispatch({\r\n                    type: 'setInfoBox',\r\n                    infoBoxData: { variant: 'danger', text: errorInfo, show: true }\r\n                });\r\n            }\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            mainInspectorPanelDispatch({\r\n                type: 'setInfoBox',\r\n                infoBoxData: { variant: 'info', text: textResponse, show: true }\r\n            });\r\n        }\r\n    };\r\n\r\n    const titleVal = (data.userLocked === 0 ?\r\n        'Блокировка пользователя' :\r\n        'Разблокировка пользователя'    \r\n    );\r\n\r\n    const textVal = (data.userLocked === 0 ?\r\n        'Блокировать пользователя: ' + data.userFio :\r\n        'Разблокировать пользователя: ' + data.userFio\r\n    );\r\n\r\n    return (\r\n        <Modal show={data.show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{titleVal}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>{textVal}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleLockUnlock}>\r\n                    {(data.userLocked === 0 ? \"Заблокировать\" : \"Разблокировать\")}\r\n                </Button>\r\n                <Button variant=\"secondary\" onClick={handleClose}>Отмена</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default LockUserModal;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport './UpdateUserModal.css';\r\nimport { \r\n    Modal, \r\n    Button,\r\n    Form, \r\n    InputGroup, \r\n    FormControl \r\n} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faBuilding, \r\n    faUser\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException';\r\nimport { AppDispatch } from 'App/Utils/useAppReducer';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\n\r\n\r\nfunction UpdateUserModal(props) {\r\n\r\n    const appDispatch = useContext(AppDispatch);\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: false }); }\r\n    ];\r\n\r\n    const { data } = props;\r\n\r\n    const [userCredentials, setUserCredentials] = useState({\r\n        depName: '',\r\n        userFio: '',\r\n        userPassword: '' \r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setUserCredentials((prevVal) => (\r\n            {...prevVal, [name]: value}\r\n        ));\r\n    };\r\n\r\n    const selectUserByID = async () => {\r\n        const textResponse = await fetchData(\r\n            'select_user_by_id',\r\n            { id: data.userID },\r\n            ...loadingTriggers\r\n        );\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'TabUsers.UpdateUserModal.selectUserByID()',\r\n            representError: (errorInfo) => {\r\n                mainInspectorPanelDispatch({\r\n                    type: 'setInfoBox',\r\n                    infoBoxData: { variant: 'danger', text: errorInfo, show: true }\r\n                });\r\n            }\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            const jsonResponse = JSON.parse(textResponse);            \r\n            const fields = jsonResponse.fields;\r\n\r\n            setUserCredentials((prevVal) => ({\r\n                ...prevVal,\r\n                depName: fields.departmentnameUserUpd,\r\n                userFio: fields.fioUserUpd\r\n            }));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (data.show) {\r\n            selectUserByID();\r\n            return () => {\r\n                setUserCredentials((prevVal) => ({\r\n                    depName: '',\r\n                    userFio: '',\r\n                    userPassword: ''\r\n                }));\r\n            };\r\n        }//eslint-disable-next-line\r\n    }, [data.show]);\r\n\r\n    const handleClose = () => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setUpdateUserModal',\r\n            updateUserModalData: {\r\n                show: false\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSave = async () => {        \r\n        const userCredentialsParams = {\r\n            id: data.userID,\r\n            fio: userCredentials.userFio.trim(),\r\n            pass: userCredentials.userPassword,\r\n            firstlogin: '1'\r\n        };\r\n        \r\n        const textResponse = await fetchData(\r\n            'update_user',\r\n            userCredentialsParams,\r\n            ...loadingTriggers\r\n        );\r\n        \r\n        mainInspectorPanelDispatch({\r\n            type: 'setUpdateUserModal',\r\n            updateUserModalData: {\r\n                show: false\r\n            }\r\n        });\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'TabUsers.UpdateUserModal.handleSave()',\r\n            representError: (errorInfo) => {\r\n                mainInspectorPanelDispatch({\r\n                    type: 'setInfoBox',\r\n                    infoBoxData: { variant: 'danger', text: errorInfo, show: true }\r\n                });\r\n            }\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            mainInspectorPanelDispatch({\r\n                type: 'setInfoBox',\r\n                infoBoxData: { variant: 'info', text: textResponse, show: true }\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    return(\r\n        <Modal show={data.show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Изменение данных пользователя</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faBuilding} size=\"1x\" />\r\n                                    &nbsp;&nbsp;Подразделение&nbsp;:\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl disabled value={userCredentials.depName} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faUser} size=\"1x\" />\r\n                                    &nbsp;&nbsp;Сотрудник&nbsp;:\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"userFio\"\r\n                                onChange={handleChange} \r\n                                value={userCredentials.userFio} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    Пароль&nbsp;:\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"userPassword\" type=\"password\"\r\n                                onChange={handleChange} \r\n                                value={userCredentials.userPassword} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleSave}>Сохранить</Button>\r\n                <Button variant=\"secondary\" onClick={handleClose}>Отмена</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default UpdateUserModal;\r\n","import React, { useContext } from 'react';\r\nimport './TabUsers.css';\r\nimport Menu from './Menu';\r\nimport Search from './Search';\r\nimport TableInfo from './TableInfo';\r\nimport Paginator from 'App/WorkPanels/MainInspectorPanel/Components/TabLog/Paginator';\r\nimport TableField from './TableField';\r\nimport LockUserModal from './LockUserModal';\r\nimport UpdateUserModal from './UpdateUserModal';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\n\r\n\r\nfunction TabUsers(props) {\r\n\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const {\r\n        panelData,\r\n        usersData,\r\n        paginatorData,\r\n        usersSearchFieldsData,\r\n        lockUserModalData,\r\n        updateUserModalData\r\n    } = props;\r\n\r\n    const handleItemClick = (pageNumber) => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setPaginators',\r\n            paginators: { tabUsersPage: pageNumber }\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Menu data={panelData} />\r\n            <hr />\r\n            <Search data={usersSearchFieldsData} />\r\n            <hr />\r\n            <TableInfo countRows={usersData.countrows} />\r\n            <hr />\r\n            <Paginator curPage={paginatorData}\r\n                perPage={usersData.perpage}\r\n                countRows={usersData.countrows}\r\n                onItemClick={handleItemClick}\r\n                onPrevClick={handleItemClick}\r\n                onNextClick={handleItemClick}\r\n                onFirstClick={handleItemClick}\r\n                onLastClick={handleItemClick} />\r\n            <TableField rowItems={usersData.rowitems} />\r\n            <hr />\r\n            <Paginator curPage={paginatorData}\r\n                perPage={usersData.perpage}\r\n                countRows={usersData.countrows}\r\n                onItemClick={handleItemClick}\r\n                onPrevClick={handleItemClick}\r\n                onNextClick={handleItemClick}\r\n                onFirstClick={handleItemClick}\r\n                onLastClick={handleItemClick} />\r\n            <br />\r\n            <br />\r\n            <LockUserModal data={lockUserModalData} />\r\n            <UpdateUserModal data={updateUserModalData} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TabUsers;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport './MainInspectorPanel.css';\r\nimport useMainInspectorPanelReducer, { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\nimport { AppDispatch } from 'App/Utils/useAppReducer';\r\nimport MainMenu from './Components/MainMenu';\r\nimport InfoBox from './Components/InfoBox';\r\nimport TabNewRecord from './Components/TabNewRecord';\r\nimport TabLog from './Components/TabLog';\r\nimport TabUsers from './Components/TabUsers';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException'; \r\n\r\n\r\nfunction MainInspectorPanel(props) {\r\n\r\n    const appDispatch = useContext(AppDispatch);\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: false }); }\r\n    ];\r\n\r\n    const { panelData } = props;\r\n\r\n    //Reducer -- start:\r\n    const initialState = {\r\n        infoBox: {\r\n            variant: 'info',\r\n            text: '',\r\n            show: false\r\n        },\r\n        panelTabs: {\r\n            showNewRecordTab : true,\r\n            showLogTab: false,\r\n            showUsersTab: false\r\n        },\r\n        paginators: {\r\n            tabLogPage: 1,\r\n            tabUsersPage: 1\r\n        },\r\n        //TabNewCard\r\n        pointsData: [],\r\n        newRecordData: {\r\n            userid: panelData.userID,\r\n            pointid: '1',\r\n            point_description: '',\r\n            time_exit: '',\r\n            time_return: '',\r\n            objects: []\r\n        },\r\n        insertNewRecordModal: {\r\n            show: false\r\n        },\r\n        //TabLog\r\n        logSearchFields: {\r\n            date: '',\r\n            userFio: '',\r\n            userID: '',\r\n            objectName: ''\r\n        },\r\n        logData: {\r\n            countrows: 0,\r\n            page: 0,\r\n            perpage: 25,\r\n            rowitems: []\r\n        },\r\n        deleteRecordModal: {\r\n            show: false,\r\n            exitID: '0'\r\n        },\r\n        updateRecordModal: {\r\n            show: false,\r\n            exitID: '0'\r\n        },\r\n        //TabUsers\r\n        usersSearchFields: {\r\n            userFio: ''\r\n        },\r\n        usersData: {\r\n            countrows: 0,\r\n            page: 0,\r\n            perpage: 25,\r\n            rowitems: []\r\n        },\r\n        lockUserModal: {\r\n            show: false,\r\n            userID: '',\r\n            userFio: '',\r\n            userLocked: false\r\n        },\r\n        updateUserModal: {\r\n            show: false,\r\n            userID: ''\r\n        }\r\n    };\r\n\r\n    const [state, dispatch] = useMainInspectorPanelReducer(initialState);\r\n    //Reducer -- end;\r\n\r\n    const {\r\n        infoBox,\r\n        panelTabs,\r\n        paginators,\r\n\r\n        pointsData,\r\n        newRecordData,\r\n        insertNewRecordModal,\r\n\r\n        logSearchFields,\r\n        logData,\r\n        deleteRecordModal,\r\n        updateRecordModal,\r\n\r\n        usersSearchFields,\r\n        usersData,\r\n        lockUserModal,\r\n        updateUserModal\r\n    } = state;\r\n\r\n    //Points\r\n    useEffect(() => {\r\n        if (panelTabs.showNewRecordTab) {\r\n            selectPoints();\r\n        }//eslint-disable-next-line\r\n    }, [panelTabs.showNewRecordTab]);\r\n\r\n    //Log\r\n    useEffect(() => {\r\n        if (panelTabs.showLogTab &&\r\n            !deleteRecordModal.show &&\r\n            !updateRecordModal.show) {\r\n            selectExits();\r\n        }//eslint-disable-next-line\r\n    }, [\r\n        panelTabs.showLogTab,\r\n        paginators.tabLogPage,\r\n        logSearchFields,\r\n        deleteRecordModal,\r\n        updateRecordModal\r\n    ]);\r\n\r\n    //Users\r\n    useEffect(() => {\r\n        if (panelTabs.showUsersTab &&\r\n            !lockUserModal.show &&\r\n            !updateUserModal.show) {\r\n            selectUsers();\r\n        }//eslint-disable-next-line\r\n    }, [\r\n        panelTabs.showUsersTab,\r\n        paginators.tabUsersPage,\r\n        usersSearchFields,\r\n        lockUserModal,\r\n        updateUserModal\r\n    ]);\r\n\r\n    const getActiveTab = () => {\r\n        let activeTab = 'default';\r\n\r\n        for (let key in panelTabs) {\r\n            if (panelTabs[key]) {\r\n                activeTab = key;\r\n            }\r\n        }\r\n\r\n        const activeTabs = {\r\n            'showNewRecordTab': \r\n                <TabNewRecord panelData={panelData}\r\n                    pointsData={pointsData}\r\n                    newRecordData={newRecordData}\r\n                    insertNewRecordModalData={insertNewRecordModal} />,\r\n            'showLogTab':\r\n                <TabLog panelData={panelData} \r\n                    pointsData={pointsData}\r\n                    paginatorData={paginators.tabLogPage}\r\n                    logData={logData}\r\n                    logSearchFieldsData={logSearchFields}\r\n                    deleteRecordModalData={deleteRecordModal}\r\n                    updateRecordModalData={updateRecordModal} />,\r\n            'showUsersTab':\r\n                <TabUsers panelData={panelData} \r\n                    usersData={usersData} \r\n                    paginatorData={paginators.tabUsersPage}\r\n                    usersSearchFieldsData={usersSearchFields}\r\n                    lockUserModalData={lockUserModal}\r\n                    updateUserModalData={updateUserModal} />,\r\n            'default':\r\n                <TabNewRecord panelData={panelData}\r\n                    pointsData={pointsData}\r\n                    newRecordData={newRecordData}\r\n                    insertNewRecordModalData={insertNewRecordModal} />\r\n        };\r\n\r\n        return (activeTabs[activeTab] || activeTabs['default']);\r\n    };\r\n\r\n    const doSelect = async (selectData) => {\r\n        const textResponse = await fetchData(\r\n            selectData.apiMethod,\r\n            selectData.searchParams,\r\n            ...loadingTriggers\r\n        );\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: selectData.methodName,\r\n            representError: (errorInfo) => {\r\n                dispatch({\r\n                    type: 'setInfoBox',\r\n                    infoBoxData: { variant: 'danger', text: errorInfo, show: true }\r\n                });\r\n            }\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            const jsonResponse = JSON.parse(textResponse);\r\n            selectData.processResult(jsonResponse);\r\n        }\r\n    };\r\n\r\n    const selectPoints = async () => {\r\n        const searchParams = {\r\n            id: '0'\r\n        };\r\n\r\n        const selectData = {\r\n            apiMethod: 'select_points',\r\n            searchParams: searchParams,\r\n            methodName: 'MainInspectorPanel.selectPoints()',\r\n            processResult: (jsonResponse) => {\r\n                dispatch({\r\n                    type: 'setPointsData',\r\n                    pointsData: jsonResponse.points\r\n                });\r\n            }\r\n        };\r\n\r\n        await doSelect(selectData);\r\n    };\r\n\r\n    const selectExits = async () => {\r\n        const searchParams = {\r\n            page:       (paginators.tabLogPage - 1),\r\n            date:       logSearchFields.date,\r\n            userfio:    logSearchFields.userFio,\r\n            userid:     logSearchFields.userID,\r\n            objectname: logSearchFields.objectName\r\n        };\r\n\r\n        const selectData = {\r\n            apiMethod: 'select_exits',\r\n            searchParams: searchParams,\r\n            methodName: 'MainInspectorPanel.selectExits()',\r\n            processResult: (jsonResponse) => {\r\n                dispatch({\r\n                    type: 'setLogData',\r\n                    logData: jsonResponse\r\n                });\r\n            }\r\n        };\r\n\r\n        await doSelect(selectData);\r\n    };\r\n\r\n    const selectUsers = async () => {\r\n        const searchParams = {\r\n            page: (paginators.tabUsersPage - 1),\r\n            userfio: usersSearchFields.userFio\r\n        };\r\n\r\n        const selectData = {\r\n            apiMethod: 'select_users',\r\n            searchParams: searchParams,\r\n            methodName: 'MainInspectorPanel.selectUsers()',\r\n            processResult: (jsonResponse) => {\r\n                dispatch({\r\n                    type: 'setUsersData',\r\n                    usersData: jsonResponse\r\n                });\r\n            }\r\n        };\r\n\r\n        await doSelect(selectData);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MainInspectorPanelDispatch.Provider value={dispatch}>\r\n                <MainMenu data={panelTabs} panelData={panelData} />\r\n                <br />\r\n                <InfoBox data={infoBox} />\r\n                <br />\r\n                {getActiveTab()}\r\n                <br />\r\n            </MainInspectorPanelDispatch.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainInspectorPanel;\r\n","import React, { useContext, useState } from 'react';\r\nimport './CreatePasswordForm.css';\r\nimport { Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException';\r\nimport { AppDispatch } from 'App/Utils/useAppReducer';\r\n\r\n\r\nfunction CreatePasswordForm(props) {\r\n\r\n    const appDispatch = useContext(AppDispatch);\r\n\r\n    const { panelData } = props;\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: false }) }\r\n    ];\r\n\r\n    const [credentials, setCredentials] = useState({\r\n        pwd: '',\r\n        pwdRepeat: '',\r\n        buttonActive: false\r\n    });\r\n\r\n    const { pwdRepeat, buttonActive} = credentials;\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n\r\n        setCredentials((prevCredentials) => {\r\n            let active = false;\r\n\r\n            if (name === 'pwd') {\r\n                active = (value.length !== 0 && value === prevCredentials.pwdRepeat);\r\n            } else if (name === 'pwdRepeat') {\r\n                active = (value.length !== 0 && value === prevCredentials.pwd);\r\n            }\r\n\r\n            return { \r\n                ...prevCredentials, \r\n                [name]: value, \r\n                buttonActive: active \r\n            };\r\n        });\r\n    };\r\n\r\n    const handleKeyPress = async (e) => {\r\n        const charCode = e.charCode;\r\n        //'Enter' key is pressed\r\n        if (charCode === 13 && buttonActive) {\r\n            await updateUser();\r\n            keepWorkspace();\r\n        }\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        await updateUser();\r\n        keepWorkspace();\r\n    };\r\n\r\n    async function updateUser() {\r\n        const updatedUser = {\r\n            id: panelData.userID,\r\n            fio: panelData.userFIO,\r\n            pass: pwdRepeat,\r\n            firstlogin: 0\r\n        };\r\n\r\n        const textResponse = await fetchData(\r\n            'update_user',\r\n            updatedUser,\r\n            ...loadingTriggers\r\n        );\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'CreatePasswordForm.updateUser()'\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            return textResponse;\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    async function keepWorkspace() {\r\n        const textResponse = await fetchData(\r\n            'keep_workspace',\r\n            { id: '0' },\r\n            ...loadingTriggers\r\n        );\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'CreatePasswordForm.keepWorkspace()'\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            const panelDataJSON = JSON.parse(textResponse);\r\n            \r\n            appDispatch({\r\n                type: 'setPanelData', \r\n                panelData: panelDataJSON\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col lg={12}>\r\n                <Alert variant=\"success\">\r\n                    <FontAwesomeIcon icon={faUserCircle} size=\"lg\" />\r\n                    &nbsp;Первичный вход в систему. Пожалуйста, измените пароль на новый (уникальный) для своей учетной записи.\r\n                </Alert>\r\n            </Col>\r\n            <Col lg={12}>\r\n                <Form.Group>\r\n                    <Form.Label>Пользователь:</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"usr\" readOnly value={panelData.userFIO} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Новый пароль:</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"pwd\" onChange={handleChange} onKeyPress={handleKeyPress} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Новый пароль (повторно):</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"pwdRepeat\" onChange={handleChange} onKeyPress={handleKeyPress} />\r\n                </Form.Group>\r\n                <Button disabled={!buttonActive} variant=\"primary\" size=\"lg\" block onClick={handleClick} >Изменить</Button>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default CreatePasswordForm;\r\n","import React, { useState, useContext } from 'react';\r\nimport './LoginFormLockedUser.css';\r\nimport { Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { AppDispatch } from 'App/Utils/useAppReducer';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException';\r\n\r\n\r\nfunction LoginFormLockedUser(props) {\r\n\r\n    const appDispatch = useContext(AppDispatch);\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: false }) }\r\n    ];\r\n\r\n    const [credentials, setCredentials] = useState({\r\n        id: 'isuservalid',\r\n        usr: '',\r\n        pwd: '',\r\n        grr: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setCredentials((prevCredentials) => (\r\n            {...prevCredentials, [name]: value}\r\n        ));\r\n    };\r\n\r\n    const handleKeyPress = async (e) => {\r\n        const charCode = e.charCode;\r\n        //'Enter' key is pressed\r\n        if (charCode === 13) {\r\n            const userParams = await doLogin();\r\n            loadWorkspace(userParams);\r\n        }\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        const userParams = await doLogin();\r\n        loadWorkspace(userParams);\r\n    };\r\n\r\n    async function loadWorkspace(userParams) {\r\n        if (userParams !== null) {\r\n            const data = JSON.parse(userParams);\r\n\r\n            if (data.isvalid) {\r\n                const textResponse = await fetchData(\r\n                    'load_workspace',\r\n                    { userid: data.userid, userrole: data.userrole },\r\n                    ...loadingTriggers\r\n                );\r\n\r\n                const response = {\r\n                    message: textResponse,\r\n                    methodName: 'LoginForm.loadWorkspace()'\r\n                };\r\n                \r\n                if (!processException(response)) {\r\n                    const panelDataJSON = JSON.parse(textResponse);\r\n                    \r\n                    appDispatch({\r\n                        type: 'setPanelData', \r\n                        panelData: panelDataJSON\r\n                    });\r\n                }\r\n            } else {\r\n                appDispatch({ type: 'alertInvalidCredentials' });\r\n            }\r\n        }\r\n    }\r\n    \r\n    async function doLogin() {\r\n        const textResponse = await fetchData(\r\n            'login',\r\n            credentials,\r\n            ...loadingTriggers\r\n        );\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'LoginForm.doLogin()'\r\n        };\r\n        \r\n        if (!processException(response)) {\r\n            return textResponse;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col lg={12}>\r\n                <Alert variant=\"danger\">\r\n                    <FontAwesomeIcon icon={faInfoCircle} size=\"lg\" />\r\n                    &nbsp;Ваша учетная запись заблокирована.\r\n                </Alert>\r\n            </Col>\r\n            <Col lg={12}>\r\n                <Form.Group>\r\n                    <Form.Label>Login:</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"usr\" onChange={handleChange} onKeyPress={handleKeyPress} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"pwd\" onChange={handleChange} onKeyPress={handleKeyPress} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" block onClick={handleClick} >Вход</Button>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default LoginFormLockedUser;","import React, { useContext } from 'react';\r\nimport './MainMenu.css';\r\nimport {AppDispatch} from 'App/Utils/useAppReducer';\r\nimport {MainInspectorPanelDispatch} from 'App/Utils/useMainInspectorPanelReducer';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException';\r\nimport { Row, Col, Button, ButtonGroup } from 'react-bootstrap';\r\n\r\n\r\nfunction MainMenu(props) {\r\n\r\n    const appDispatch = useContext(AppDispatch);\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: false }); }\r\n    ];\r\n\r\n    const { data, panelData } = props;\r\n\r\n    const logoutIsClicked = async () => {\r\n        const textResponse = await fetchData(\r\n            'logout',\r\n            { id: '0' },\r\n            ...loadingTriggers\r\n        );\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'InspectorPanel.MainMenu.logoutIsClicked()'\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            appDispatch({\r\n                type: 'setPanelData',\r\n                panelData: {\r\n                    panelID: '0',\r\n                    userID: '',\r\n                    userFIO: '',\r\n                    depID: '',\r\n                    depName: ''\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const menuButtonIsClicked = (e) => {\r\n        const menuButtonID = e.target.id;\r\n\r\n        let freshPanelTabs = {};\r\n\r\n        for (let item in data) {\r\n            if (item === menuButtonID) {\r\n                freshPanelTabs[item] = true;\r\n            } else {\r\n                freshPanelTabs[item] = false;\r\n            }\r\n        }\r\n        \r\n        mainInspectorPanelDispatch({\r\n            type: 'setPanelTabs',\r\n            panelTabs: freshPanelTabs\r\n        });\r\n    };\r\n\r\n    const goToDocXIsClicked = () => {\r\n        window.location = 'http://kom-es01-app25:8888/docx/';\r\n    };\r\n\r\n    const goToActsIsClicked = () => {\r\n        window.location = \"http://kom-es01-app25:8888/acts/\";\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col lg={12}>\r\n                <ButtonGroup className=\"flex-wrap\">\r\n                    <Button variant=\"outline-secondary\" active={data.showNewRecordTab} onClick={menuButtonIsClicked} id=\"showNewRecordTab\">Новая запись</Button>\r\n                    <Button variant=\"outline-secondary\" active={data.showLogTab} onClick={menuButtonIsClicked} id=\"showLogTab\">Журнал</Button>\r\n                    <Button variant=\"outline-info\" onClick={goToDocXIsClicked} >Акт обследования</Button>\r\n                    {(panelData.depID === 2 || panelData.depID === 3) &&\r\n                        <Button variant=\"outline-info\" onClick={goToActsIsClicked} >Бланки Ухта</Button>\r\n                    }\r\n                    <Button variant=\"primary\" onClick={logoutIsClicked} >Выйти</Button>\r\n                </ButtonGroup>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from 'react';\r\nimport './Menu.css';\r\nimport { Row, Col, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faBuilding } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nfunction Menu(props) {\r\n\r\n    const { data } = props;\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col lg={12}>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faUser} size=\"1x\" />\r\n                                    &nbsp;&nbsp;Сотрудник&nbsp;:\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl disabled value={data.userFIO} />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                        <InputGroup className=\"sav2-mb-1\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faBuilding} size=\"1x\" />\r\n                                    &nbsp;&nbsp;Подразделение&nbsp;:\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl disabled value={data.depName} />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import React, { useContext } from 'react';\r\nimport './Search.css';\r\nimport { Row } from 'react-bootstrap';\r\nimport SearchItem from 'App/WorkPanels/MainInspectorPanel/Components/TabLog/Search/SearchItem';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\n\r\n\r\nfunction Search(props) {\r\n\r\n    const {data} = props;\r\n\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const doSearch = (searchParams) => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setLogSearchFields',\r\n            logSearchFields: searchParams\r\n        });\r\n    };\r\n\r\n    const datepickerData = {\r\n        type: \"datepicker\",\r\n        params: {\r\n            format: \"dd-mm-yyyy\",\r\n            viewMode: \"months\",\r\n            minViewMode: \"days\",\r\n            language: 'ru'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <p>Поиск записей: </p>\r\n            <Row>\r\n                <SearchItem name=\"date\"\r\n                    size={4}\r\n                    label=\"Дата выхода:\"\r\n                    handleSearch={doSearch}\r\n                    mask={datepickerData}\r\n                    currentVal={data.date} />\r\n                <SearchItem name=\"objectName\"\r\n                    size={6}\r\n                    label=\"Объект выхода:\"\r\n                    handleSearch={doSearch}\r\n                    currentVal={data.objectName} />\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useContext } from 'react';\r\nimport './TabLog.css';\r\nimport Menu from './Menu';\r\nimport Paginator from 'App/WorkPanels/MainInspectorPanel/Components/TabLog/Paginator';\r\nimport Search from './Search';\r\nimport TableInfo from 'App/WorkPanels/MainInspectorPanel/Components/TabLog/TableInfo';\r\nimport TableField from 'App/WorkPanels/MainInspectorPanel/Components/TabLog/TableField';\r\nimport DeleteRecordModal from 'App/WorkPanels/MainInspectorPanel/Components/TabLog/DeleteRecordModal';\r\nimport UpdateRecordModal from 'App/WorkPanels/MainInspectorPanel/Components/TabLog/UpdateRecordModal';\r\nimport { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\n\r\n\r\nfunction TabLog(props) {\r\n\r\n    const mainInspectorPanelDispatch = useContext(MainInspectorPanelDispatch);\r\n\r\n    const {\r\n        panelData,\r\n        pointsData,\r\n        paginatorData,\r\n        logData,\r\n        logSearchFieldsData,\r\n        deleteRecordModalData,\r\n        updateRecordModalData\r\n    } = props;\r\n\r\n    const handleItemClick = (pageNumber) => {\r\n        mainInspectorPanelDispatch({\r\n            type: 'setPaginators',\r\n            paginators: { tabLogPage: pageNumber }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Menu data={panelData} />\r\n            <hr />\r\n            <Search data={logSearchFieldsData} />\r\n            <hr />\r\n            <TableInfo countRows={logData.countrows} />\r\n            <hr />\r\n            <Paginator curPage={paginatorData}\r\n                perPage={logData.perpage}\r\n                countRows={logData.countrows}\r\n                onItemClick={handleItemClick}\r\n                onPrevClick={handleItemClick}\r\n                onNextClick={handleItemClick}\r\n                onFirstClick={handleItemClick}\r\n                onLastClick={handleItemClick} />\r\n            <TableField rowItems={logData.rowitems} />\r\n            <hr />\r\n            <Paginator curPage={paginatorData}\r\n                perPage={logData.perpage}\r\n                countRows={logData.countrows}\r\n                onItemClick={handleItemClick}\r\n                onPrevClick={handleItemClick}\r\n                onNextClick={handleItemClick}\r\n                onFirstClick={handleItemClick}\r\n                onLastClick={handleItemClick} />\r\n            <br />\r\n            <br />\r\n            <DeleteRecordModal data={deleteRecordModalData} />\r\n            <UpdateRecordModal panelData={panelData}\r\n                data={updateRecordModalData} \r\n                pointsData={pointsData}/>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TabLog;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport './InspectorPanel.css';\r\nimport useMainInspectorPanelReducer, { MainInspectorPanelDispatch } from 'App/Utils/useMainInspectorPanelReducer';\r\nimport { AppDispatch } from 'App/Utils/useAppReducer';\r\nimport MainMenu from './Components/MainMenu';\r\nimport InfoBox from 'App/WorkPanels/MainInspectorPanel/Components/InfoBox';\r\nimport TabNewRecord from 'App/WorkPanels/MainInspectorPanel/Components/TabNewRecord';\r\nimport TabLog from './Components/TabLog';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException'; \r\n\r\n\r\nfunction InspectorPanel(props) {\r\n\r\n    const appDispatch = useContext(AppDispatch);\r\n\r\n    const loadingTriggers = [\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { appDispatch({ type: 'setIsLoad', isLoad: false }); }\r\n    ];\r\n\r\n    const { panelData } = props;\r\n\r\n    //Reducer -- start:\r\n    const initialState = {\r\n        infoBox: {\r\n            variant: 'info',\r\n            text: '',\r\n            show: false\r\n        },\r\n        panelTabs: {\r\n            showNewRecordTab : true,\r\n            showLogTab: false,\r\n            showUsersTab: false\r\n        },\r\n        paginators: {\r\n            tabLogPage: 1,\r\n            tabUsersPage: 1\r\n        },\r\n        //TabNewCard\r\n        pointsData: [],\r\n        newRecordData: {\r\n            userid: panelData.userID,\r\n            pointid: '1',\r\n            point_description: '',\r\n            time_exit: '',\r\n            time_return: '',\r\n            objects: []\r\n        },\r\n        insertNewRecordModal: {\r\n            show: false\r\n        },\r\n        //TabLog\r\n        logSearchFields: {\r\n            date: '',\r\n            userFio: '',\r\n            userID: panelData.userID.toString(),\r\n            objectName: ''\r\n        },\r\n        logData: {\r\n            countrows: 0,\r\n            page: 0,\r\n            perpage: 25,\r\n            rowitems: []\r\n        },\r\n        deleteRecordModal: {\r\n            show: false,\r\n            exitID: '0'\r\n        },\r\n        updateRecordModal: {\r\n            show: false,\r\n            exitID: '0'\r\n        }\r\n    };\r\n\r\n    const [state, dispatch] = useMainInspectorPanelReducer(initialState);\r\n    //Reducer -- end;\r\n\r\n    const {\r\n        infoBox,\r\n        panelTabs,\r\n        paginators,\r\n\r\n        pointsData,\r\n        newRecordData,\r\n        insertNewRecordModal,\r\n\r\n        logSearchFields,\r\n        logData,\r\n        deleteRecordModal,\r\n        updateRecordModal\r\n    } = state;\r\n\r\n    //Points\r\n    useEffect(() => {\r\n        if (panelTabs.showNewRecordTab) {\r\n            selectPoints();\r\n        }//eslint-disable-next-line\r\n    }, [panelTabs.showNewRecordTab]);\r\n\r\n    //Log\r\n    useEffect(() => {\r\n        if (panelTabs.showLogTab &&\r\n            !deleteRecordModal.show &&\r\n            !updateRecordModal.show) {\r\n            selectExits();\r\n        }//eslint-disable-next-line\r\n    }, [\r\n        panelTabs.showLogTab,\r\n        paginators.tabLogPage,\r\n        logSearchFields,\r\n        deleteRecordModal,\r\n        updateRecordModal\r\n    ]);\r\n\r\n    const getActiveTab = () => {\r\n        let activeTab = 'default';\r\n\r\n        for (let key in panelTabs) {\r\n            if (panelTabs[key]) {\r\n                activeTab = key;\r\n            }\r\n        }\r\n\r\n        const activeTabs = {\r\n            'showNewRecordTab': \r\n                <TabNewRecord panelData={panelData}\r\n                    pointsData={pointsData}\r\n                    newRecordData={newRecordData}\r\n                    insertNewRecordModalData={insertNewRecordModal} />,\r\n            'showLogTab':\r\n                <TabLog panelData={panelData} \r\n                    pointsData={pointsData}\r\n                    paginatorData={paginators.tabLogPage}\r\n                    logData={logData}\r\n                    logSearchFieldsData={logSearchFields}\r\n                    deleteRecordModalData={deleteRecordModal}\r\n                    updateRecordModalData={updateRecordModal} />,\r\n            'default':\r\n                <TabNewRecord panelData={panelData}\r\n                    pointsData={pointsData}\r\n                    newRecordData={newRecordData}\r\n                    insertNewRecordModalData={insertNewRecordModal} />\r\n        };\r\n\r\n        return (activeTabs[activeTab] || activeTabs['default']);\r\n    };\r\n\r\n    const doSelect = async (selectData) => {\r\n        const textResponse = await fetchData(\r\n            selectData.apiMethod,\r\n            selectData.searchParams,\r\n            ...loadingTriggers\r\n        );\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: selectData.methodName,\r\n            representError: (errorInfo) => {\r\n                dispatch({\r\n                    type: 'setInfoBox',\r\n                    infoBoxData: { variant: 'danger', text: errorInfo, show: true }\r\n                });\r\n            }\r\n        };\r\n\r\n        if (!processException(response)) {\r\n            const jsonResponse = JSON.parse(textResponse);\r\n            selectData.processResult(jsonResponse);\r\n        }\r\n    };\r\n\r\n    const selectPoints = async () => {\r\n        const searchParams = {\r\n            id: '0'\r\n        };\r\n\r\n        const selectData = {\r\n            apiMethod: 'select_points',\r\n            searchParams: searchParams,\r\n            methodName: 'InspectorPanel.selectPoints()',\r\n            processResult: (jsonResponse) => {\r\n                dispatch({\r\n                    type: 'setPointsData',\r\n                    pointsData: jsonResponse.points\r\n                });\r\n            }\r\n        };\r\n\r\n        await doSelect(selectData);\r\n    };\r\n\r\n    const selectExits = async () => {\r\n        const searchParams = {\r\n            page:       (paginators.tabLogPage - 1),\r\n            date:       logSearchFields.date,\r\n            userfio:    logSearchFields.userFio,\r\n            userid:     logSearchFields.userID,\r\n            objectname: logSearchFields.objectName\r\n        };\r\n\r\n        const selectData = {\r\n            apiMethod: 'select_exits',\r\n            searchParams: searchParams,\r\n            methodName: 'InspectorPanel.selectExits()',\r\n            processResult: (jsonResponse) => {\r\n                dispatch({\r\n                    type: 'setLogData',\r\n                    logData: jsonResponse\r\n                });\r\n            }\r\n        };\r\n\r\n        await doSelect(selectData);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MainInspectorPanelDispatch.Provider value={dispatch}>\r\n                <MainMenu data={panelTabs} panelData={panelData} />\r\n                <br />\r\n                <InfoBox data={infoBox} />\r\n                <br />\r\n                {getActiveTab()}\r\n                <br />\r\n            </MainInspectorPanelDispatch.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InspectorPanel;\r\n","import React from 'react';\r\nimport './Workspace.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport LoginForm from 'App/WorkPanels/LoginForm';\r\nimport MainInspectorPanel from 'App/WorkPanels/MainInspectorPanel';\r\nimport CreatePasswordForm from 'App/WorkPanels/CreatePasswordForm';\r\nimport LoginFormLockedUser from 'App/WorkPanels/LoginFormLockedUser';\r\nimport InspectorPanel from 'App/WorkPanels/InspectorPanel';\r\n\r\n\r\nfunction Workspace(props) {\r\n\r\n    const { wsID, panelData } = props;\r\n\r\n    const getWorkPanel = (ID) => {\r\n        switch (ID) {\r\n            case '-2': \r\n                return <CreatePasswordForm panelData={panelData} />;\r\n            case '-1':\r\n                return <LoginFormLockedUser />;\r\n            case '0':\r\n                return <LoginForm />;\r\n            case '1':\r\n                return <MainInspectorPanel panelData={panelData} />;\r\n            case '3':\r\n                return <InspectorPanel panelData={panelData} />;\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"sav2-main-cont\">\r\n            {getWorkPanel(wsID)}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Workspace;\r\n","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport useAppReducer, { AppDispatch } from 'App/Utils/useAppReducer';\r\nimport fetchData from 'App/Utils/fetchData';\r\nimport processException from 'App/Utils/processException';\r\nimport TopHeader from 'App/TopHeader';\r\nimport LightCover from 'App/LightCover';\r\nimport Workspace from 'App/Workspace';\r\n\r\nfunction App(props) {\r\n\r\n    //Reducer -- start:\r\n    const initialState = {\r\n        isLoad: true,\r\n        panelData: {\r\n            panelID: null,\r\n            userID: '',\r\n            userFIO: '',\r\n            depID: '',\r\n            depName: ''\r\n        }\r\n    };\r\n\r\n    const [state, dispatch] = useAppReducer(initialState);\r\n    //Reducer -- end;\r\n\r\n    const { isLoad, panelData } = state;\r\n\r\n    const loadingTriggers = [\r\n        () => { dispatch({ type: 'setIsLoad', isLoad: true }); },\r\n        () => { dispatch({ type: 'setIsLoad', isLoad: false }); }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        keepWorkspace();\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    async function keepWorkspace() {\r\n        const textResponse = await fetchData(\r\n            'keep_workspace',\r\n            { id: '0' },\r\n            ...loadingTriggers\r\n        );\r\n\r\n        const response = {\r\n            message: textResponse,\r\n            methodName: 'App.keepWorkspace()'\r\n        }; \r\n\r\n        if (!processException(response)) {\r\n            const panelDataJSON = JSON.parse(textResponse);\r\n\r\n            dispatch({\r\n                type: 'setPanelData',\r\n                panelData: panelDataJSON\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppDispatch.Provider value={dispatch}>\r\n                <TopHeader />\r\n                <Workspace wsID={panelData.panelID} panelData={panelData} />\r\n                <LightCover isLoading={isLoad} />\r\n            </AppDispatch.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from 'App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}